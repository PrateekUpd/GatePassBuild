{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-authorization/admin-authorization.component.ts","./src/app/admin-authorization/admin-authorization.component.html","./src/app/admin-authorization/snack-bar-component-snack.html","./src/app/admin-data-control/admin-data-control.component.ts","./src/app/admin-data-control/admin-data-control.component.html","./src/app/animations/template.animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dialog-content-print.html","./src/app/app.module.ts","./src/app/employee-search/employee-search.component.ts","./src/app/employee-search/employee-search.component.html","./src/app/filter-gate-pass/filter-gate-pass.component.ts","./src/app/filter-gate-pass/filter-gate-pass.component.html","./src/app/gate-pass/gate-pass.component.ts","./src/app/gate-pass/gate-pass.component.html","./src/app/gate-pass/snack-bar-component-gpCreated.html","./src/app/gatepass-search/gatepass-search.component.ts","./src/app/gatepass-search/gatepass-search.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/authorize.guard.ts","./src/app/guards/create.guard.ts","./src/app/guards/login.guard.ts","./src/app/guards/role.guard.ts","./src/app/guards/super-admin.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/inbox/inbox.component.ts","./src/app/inbox/inbox.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/dialog-content-home.html","./src/app/profile/snack-bar-component-userEdited.html","./src/app/quantity-ret-validator.directive.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/report/report.component.ts","./src/app/report/report.component.html","./src/app/return/return.component.ts","./src/app/return/return.component.html","./src/app/return/dialog-content-return.html","./src/app/return/snack-bar-component-returnSnack.html","./src/app/services/message/message.service.ts","./src/app/services/print/print.service.ts","./src/app/services/user/user.service.ts","./src/app/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user/user.service';\nimport { User } from '../models/user';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-admin-authorization',\n  templateUrl: './admin-authorization.component.html',\n  styleUrls: ['./admin-authorization.component.css']\n})\nexport class AdminAuthorizationComponent implements OnInit {\n\n  constructor(public userService: UserService, private _snackBar: MatSnackBar) { }\n  ngOnInit() {\n  }\n\n\n  selectedAuthUser: User\n  // onSelect(authUser: User): void {\n  //   this.selectedAuthUser = authUser;\n  //   console.log(this.selectedAuthUser)\n  // }\n\n  selectedUnAuthUser: User\n  // onSelectUnAuth(unAuthUser: User): void {\n  //   this.selectedUnAuthUser = unAuthUser;\n  // }\n\n  // authUsers: User[];\n  // unAuthUsers: User[];\n  // getAuthUsers(selectedAuthorization: boolean) {\n  //   this.userService.getAuthUsers(selectedAuthorization)\n  //     .subscribe(authUsers => this.authUsers = authUsers);\n  // }\n  // getUnAuthUsers(selectedAuthorization: boolean) {\n  //   this.userService.getAuthUsers(selectedAuthorization)\n  //     .subscribe(unAuthUsers => this.unAuthUsers = unAuthUsers)\n  // }\n  addAuthorization(authId: string, uId: User) {\n    console.log(this.selectedAuthUser.authorizedTo)\n    const iterator = this.selectedAuthUser.authorizedTo[Symbol.iterator]();\n    for (const authorizedToo of iterator) {\n      if(authorizedToo.empId === uId.empId) {\n        this._snackBar.openFromComponent(AlreadyAuthComponent, {\n          duration: 3 * 1000,\n        });\n        // alert(\"You have already added authorization for this user\")\n        return;\n      }\n    }\n\n    this.userService.addAuthorization(authId, uId)\n      .subscribe((authUser) => {\n        // this.location.reload()\n        console.log(authUser)\n        this.selectedAuthUser = authUser\n      })\n  }\n\n\n\n}\n\n@Component({\n  selector: 'snack-bar-component-snack',\n  templateUrl: 'snack-bar-component-snack.html',\n  styles: [`\n    .already-auth {\n      color: hotpink;\n    }\n  `],\n})\nexport class AlreadyAuthComponent {}\n","<h1>Authorization</h1>\n\n\n<!-- <div class=\"container\"> -->\n\n<div class='parent flex-parent'>\n  <div class='child flex-child'>\n    <h3>Authorizer</h3>\n    <app-employee-search [selectedAuth]=true [selectedProject]='userService.loggedIn.selectedProject._id' class=\"search-bar left-search\"></app-employee-search>\n  </div>\n  <div class='child flex-child'>\n    <h3>User</h3>\n    <app-employee-search [selectedAuth]=false [selectedProject]='userService.loggedIn.selectedProject._id' class=\"search-bar right-search\"></app-employee-search>\n  </div>\n</div>\n<div class=\"row-card\">\n  <mat-card class=\"user-card\" *ngIf=\"selectedAuthUser\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>Authorizer Details</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        Employee id: {{selectedAuthUser.empId}}\n      </div>\n      <div class=\"row\">\n        Name: {{selectedAuthUser.name}}\n      </div>\n      <div class=\"row\">\n        Deparment: {{selectedAuthUser.selectedDepartment.viewValue}}\n      </div>\n      <div class=\"row\">\n        Grade: {{selectedAuthUser.selectedGrade.viewValue}}\n      </div>\n      <div class=\"row\">\n        Project: {{selectedAuthUser.selectedProject.viewValue}}\n      </div>\n      <div class=\"row\">\n        Authorization: {{selectedAuthUser.selectedAuthorization}}\n      </div>\n      <div class=\"row\">\n        Creation: {{selectedAuthUser.selectedCreation}}\n      </div>\n      <div class=\"row\">\n        Authorized To:\n        <ul *ngFor=\"let ato of selectedAuthUser.authorizedTo\">\n          <li>Employee id: {{ato.empId}}</li>\n        </ul>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card class=\"user-card\" *ngIf=\"selectedUnAuthUser\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>User Details</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        Employee id: {{selectedUnAuthUser.empId}}\n      </div>\n      <div class=\"row\">\n        Name: {{selectedUnAuthUser.name}}\n      </div>\n      <div class=\"row\">\n        Deparment: {{selectedUnAuthUser.selectedDepartment.viewValue}}\n      </div>\n      <div class=\"row\">\n        Grade: {{selectedUnAuthUser.selectedGrade.viewValue}}\n      </div>\n      <div class=\"row\">\n        Project: {{selectedUnAuthUser.selectedProject.viewValue}}\n      </div>\n      <div class=\"row\">\n        Authorization: {{selectedUnAuthUser.selectedAuthorization}}\n      </div>\n      <div class=\"row\">\n        Creation: {{selectedUnAuthUser.selectedCreation}}\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<div class=\"row-button\">\n  <button mat-raised-button type=\"button\" color=\"accent\"\n    (click)=\"addAuthorization(this.selectedAuthUser._id, this.selectedUnAuthUser)\"\n    *ngIf=\"selectedAuthUser && selectedUnAuthUser\">Add Authorization</button>\n</div>\n<!-- </div> -->\n","<span class=\"already-auth\">\r\n  The Authorizer has already been authorized for this user!\r\n</span>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user/user.service';\nimport { Item } from '../models/item';\nimport { Router } from '@angular/router';\nimport { ProjectArray } from '../models/projectArray';\nimport { Project } from '../models/project';\n\n// import { Project } from '../project';\n// import { Grade } from '../grade';\n// import { Department } from '../department';\n\n@Component({\n  selector: 'app-admin-data-control',\n  templateUrl: './admin-data-control.component.html',\n  styleUrls: ['./admin-data-control.component.css']\n})\nexport class AdminDataControlComponent implements OnInit {\n\n  editForm;\n  addForm;\n  deleteForm;\n\n  constructor(private fb: FormBuilder, private userService: UserService, private router: Router) {\n    // this.editForm = this.fb.group({\n    //   selectedItem: new FormControl('', Validators.required),\n    //   update: new FormControl('', Validators.required),\n    // });\n    // this.addForm = this.fb.group({\n    //   viewValue: new FormControl('', Validators.required),\n    // });\n    this.deleteForm = this.fb.group({\n      _id: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectedField: string;\n  selectedField2: string;\n  selectedField3: string;\n  fields: string[] = ['Departments', 'Grades', 'Projects', 'Gates', 'Units'];\n\n  // selectedItem: string;\n  items: Item[];\n  items2: Project[];\n  itemsAdd: Item[];\n  itemsDelete: Item[];\n\n  onChange() {\n    if (this.selectedField == this.fields[0]) {\n      this.editForm = this.fb.group({\n        selectedItem: new FormControl('', Validators.required),\n        update: new FormControl('', Validators.required),\n      });\n      this.userService.getDepartments()\n        .subscribe(departments => this.items = departments);\n    }\n    else if (this.selectedField == this.fields[1]) {\n      this.editForm = this.fb.group({\n        selectedItem: new FormControl('', Validators.required),\n        update: new FormControl('', Validators.required),\n      });\n      this.userService.getGrades()\n        .subscribe(grades => this.items = grades);\n    }\n    else if (this.selectedField == this.fields[2]) {\n      this.editForm = this.fb.group({\n        selectedItem: new FormControl('', Validators.required),\n        update: new FormControl('', Validators.required),\n      });\n      this.userService.getProjects()\n        .subscribe(projects => this.items = projects);\n    }\n    else if (this.selectedField == this.fields[3]) {\n      this.editForm = this.fb.group({\n        selectedItem2: new FormControl('', Validators.required),\n        selectedItem: new FormControl('', Validators.required),\n        update: new FormControl('', Validators.required),\n      });\n      this.userService.getProjects()\n        .subscribe(projects => this.items2 = projects);\n    }\n    else if (this.selectedField == this.fields[4]) {\n      this.editForm = this.fb.group({\n        selectedItem: new FormControl('', Validators.required),\n        update: new FormControl('', Validators.required),\n        tolerance: new FormControl('', Validators.required),\n      });\n      this.userService.getUnits()\n        .subscribe(units => this.items = units);\n    }\n  }\n\n  toleranceUpdate(unitId: string) {\n    if(this.selectedField === this.fields[4]) {\n      const unit = this.items.find(item => item._id == unitId);\n      this.editForm.patchValue({\n        tolerance: unit.tolerance\n      });\n    }\n  }\n\n  gateFunc(projectId: string) {\n    const project = this.items2.find(item => item._id == projectId);\n    this.items = project.gates;\n  }\n\n  onChange2() {\n    if (this.selectedField2 == this.fields[3]) {\n      this.addForm = this.fb.group({\n        selectedItem: new FormControl('', Validators.required),\n        viewValue: new FormControl('', Validators.required),\n      });\n      this.userService.getProjects()\n        .subscribe(projects => this.itemsAdd = projects);\n    }\n    else if (this.selectedField2 == this.fields[4]) {\n      this.addForm = this.fb.group({\n        tolerance: new FormControl('', Validators.required),\n        viewValue: new FormControl('', Validators.required),\n      });\n      // this.addForm.addControl('tolerance', this.fb.control('', [Validators.required]));\n    }\n    else {\n      this.addForm = this.fb.group({\n        viewValue: new FormControl('', Validators.required),\n      });\n    }\n  }\n\n  onChange3() {\n    if (this.selectedField3 == this.fields[0]) {\n      this.userService.getDepartments()\n        .subscribe(departments => this.itemsDelete = departments);\n    }\n    else if (this.selectedField3 == this.fields[1]) {\n      this.userService.getGrades()\n        .subscribe(grades => this.itemsDelete = grades);\n    }\n    else if (this.selectedField3 == this.fields[2]) {\n      this.userService.getProjects()\n        .subscribe(projects => this.itemsDelete = projects);\n    }\n  }\n\n\n  onSubmit(editData) {\n    console.log(editData)\n    if (!editData) { return; }\n    else if (editData.selectedItem === '' || editData.selectedItem === null) { return; }\n    else if (this.selectedField == this.fields[0]) {\n      this.userService.updateDepartment(editData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Department updated: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField == this.fields[1]) {\n      this.userService.updateGrade(editData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Grade updated: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField == this.fields[2]) {\n      this.userService.updateProject(editData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Project updated: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField == this.fields[3]) {\n      this.userService.updateGate(editData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Gate updated: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else {\n      this.userService.updateUnit(editData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Unit updated: ${Item.viewValue}`)\n          location.reload()\n          // this.router.routeReuseStrategy.shouldReuseRoute = function () {\n          //   return false;\n          // };\n        });\n    }\n  }\n\n  onSubmit2(addData) {\n    if (!addData) {\n      return;\n    }\n    else if (this.selectedField2 == this.fields[0]) {\n      this.userService.addDepartment(addData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Department added: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField2 == this.fields[1]) {\n      this.userService.addGrade(addData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Grade added: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField2 == this.fields[2]) {\n      this.userService.addProject(addData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Project added: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField2 == this.fields[4]) {\n      this.userService.addUnit(addData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Unit added: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else {\n      this.userService.addGate(addData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Gate added: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n  }\n\n  onSubmit3(deleteData) {\n    if (!deleteData) {\n      return;\n    }\n    else if (this.selectedField3 == this.fields[0]) {\n      this.userService.deleteDepartment(deleteData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Department deleted: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField3 == this.fields[1]) {\n      this.userService.deleteGrade(deleteData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Grade deleted: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n    else if (this.selectedField3 == this.fields[2]) {\n      this.userService.deleteProject(deleteData as Item)\n        .subscribe((Item) => {\n          this.userService.snackBarMessage(`Project deleted: ${Item.viewValue}`)\n          location.reload()\n        });\n    }\n  }\n\n}\n","<h1>Admin Data Management</h1>\n\n<!-- EDIT DATA -->\n\n<div class=\"row\">\n<mat-card class=\"radio-card\">\n  <label id=\"example-radio-group-label\">Edit data</label>\n  <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"selectedField\"\n    (change)=\"onChange()\">\n    <mat-radio-button class=\"example-radio-button\" *ngFor=\"let field of fields\" [value]=\"field\">\n      {{field}}\n    </mat-radio-button>\n  </mat-radio-group>\n  <!-- <div>You want to edit: {{selectedField}}</div> -->\n</mat-card>\n\n<form *ngIf=\"selectedField\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit(editForm.value)\">\n  <mat-card *ngIf=\"selectedField\" class=\"edit-card\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>Edit</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-form-field class=\"full-width\" *ngIf=\"selectedField === fields[3]\">\n        <mat-label>Select Project</mat-label>\n        <mat-select formControlName=\"selectedItem2\" name=\"item2\" #projectSelect (valueChange)='gateFunc(projectSelect.value)'>\n          <mat-option *ngFor=\"let item of items2\" [value]=\"item._id\">\n            {{ item.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <mat-label>{{selectedField}}</mat-label>\n        <mat-select formControlName=\"selectedItem\" name=\"item\" #unitSelect (valueChange)='toleranceUpdate(unitSelect.value)'>\n          <mat-option *ngFor=\"let item of items\" [value]=\"item._id\">\n            {{ item.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Update Value\" formControlName=\"update\" type=\"text\" />\n      </mat-form-field>\n      <mat-form-field class=\"full-width\" *ngIf=\"selectedField === fields[4]\">\n        <input matInput placeholder=\"Tolerance\" formControlName=\"tolerance\" type=\"number\" />\n        <span matSuffix>%</span>\n      </mat-form-field>\n      <mat-card-actions class=\"button\">\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!editForm.valid\">Edit Data</button>\n      </mat-card-actions>\n    </mat-card-content>\n  </mat-card>\n</form>\n</div>\n\n<!-- ADD DATA  -->\n\n<div class=\"row\">\n  <mat-card class=\"radio-card\">\n    <label id=\"example-radio-group-label\">Add data</label>\n    <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"selectedField2\" (change)=\"onChange2()\">\n      <mat-radio-button class=\"example-radio-button\" *ngFor=\"let field of fields\" [value]=\"field\">\n        {{field}}\n      </mat-radio-button>\n    </mat-radio-group>\n  </mat-card>\n\n  <form *ngIf=\"selectedField2\" [formGroup]=\"addForm\" (ngSubmit)=\"onSubmit2(addForm.value)\">\n    <mat-card *ngIf=\"selectedField2\" class=\"edit-card\">\n      <mat-card-header class=\"header\">\n        <mat-card-title>Add</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-form-field class=\"full-width\" *ngIf=\"selectedField2 === fields[3]\">\n          <mat-label>Select Project</mat-label>\n          <mat-select formControlName=\"selectedItem\" name=\"item\">\n            <mat-option *ngFor=\"let item of itemsAdd\" [value]=\"item._id\">\n              {{ item.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Add Value\" formControlName=\"viewValue\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field class=\"full-width\" *ngIf=\"selectedField2 === fields[4]\">\n          <input matInput placeholder=\"Tolerance\" formControlName=\"tolerance\" type=\"number\" />\n          <span matSuffix>%</span>\n        </mat-form-field>\n        <mat-card-actions class=\"button\">\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!addForm.valid\">Add Data</button>\n        </mat-card-actions>\n      </mat-card-content>\n    </mat-card>\n  </form>\n  </div>\n\n  <!-- DELETE DATA  -->\n\n  <div class=\"row\">\n    <mat-card class=\"radio-card\">\n      <label id=\"example-radio-group-label\">Delete data</label>\n      <mat-radio-group aria-labelledby=\"example-radio-group-label\" class=\"example-radio-group\" [(ngModel)]=\"selectedField3\"\n        (change)=\"onChange3()\">\n        <mat-radio-button class=\"example-radio-button\" *ngFor=\"let field of fields\" [value]=\"field\">\n          {{field}}\n        </mat-radio-button>\n      </mat-radio-group>\n      <!-- <div>You want to edit: {{selectedField}}</div> -->\n    </mat-card>\n\n    <form *ngIf=\"selectedField3\" [formGroup]=\"deleteForm\" (ngSubmit)=\"onSubmit3(deleteForm.value)\">\n      <mat-card *ngIf=\"selectedField3\" class=\"edit-card\">\n        <mat-card-header class=\"header\">\n          <mat-card-title>Delete</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-form-field class=\"full-width\">\n            <mat-label>{{selectedField3}}</mat-label>\n            <mat-select formControlName=\"_id\" name=\"item\">\n              <mat-option *ngFor=\"let item of itemsDelete\" [value]=\"item._id\">\n                {{ item.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-card-actions class=\"button\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!deleteForm.valid\">Delete Data</button>\n          </mat-card-actions>\n        </mat-card-content>\n      </mat-card>\n    </form>\n    </div>\n","import { trigger, sequence, state, animate, transition, style } from '@angular/animations';\r\n\r\nexport const rowsAnimation =\r\n    trigger('rowsAnimation', [\r\n      transition('void => *', [\r\n        style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\r\n        sequence([\r\n          animate(\".35s ease\", style({ height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\r\n          animate(\".35s ease\", style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\r\n        ])\r\n      ])\r\n    ]);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminDataControlComponent } from './admin-data-control/admin-data-control.component';\nimport { GatePassComponent } from './gate-pass/gate-pass.component';\nimport { ReportComponent } from './report/report.component';\nimport { AdminAuthorizationComponent } from './admin-authorization/admin-authorization.component';\nimport { FilterGatePassComponent } from './filter-gate-pass/filter-gate-pass.component';\nimport { ReturnComponent } from './return/return.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoginGuard } from './guards/login.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { CreateGuard } from './guards/create.guard';\nimport { SuperAdminGuard } from './guards/super-admin.guard';\nimport { AuthorizeGuard } from './guards/authorize.guard'\nimport { InboxComponent } from './inbox/inbox.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [LoginGuard] },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'gatepass', component: GatePassComponent, canActivate: [AuthGuard, CreateGuard] },\n  { path: 'admin/data-control', component: AdminDataControlComponent, canActivate: [AuthGuard, SuperAdminGuard] },\n  { path: 'admin/authorization', component: AdminAuthorizationComponent, canActivate: [AuthGuard, RoleGuard] },\n  { path: 'report', component: ReportComponent, canActivate: [AuthGuard] },\n  { path: 'filter', component: FilterGatePassComponent, canActivate: [AuthGuard] },\n  { path: 'return', component: ReturnComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: 'inbox', component: InboxComponent, canActivate: [AuthGuard, AuthorizeGuard] },\n  { path: '**', component: PageNotFoundComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import { Component, Inject } from '@angular/core';\nimport { UserService } from './services/user/user.service';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n  project: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Gate Pass';\n  constructor(public userService: UserService, public dialog: MatDialog, private router: Router) {\n  }\n  // loggedIn = this.userService.loggedIn;\n  logOut() {\n    console.log('logOut')\n    this.userService.logOutUser()\n      .subscribe(() => this.router.navigate(['login']))\n  }\n\n  print() {\n    const dialogRef = this.dialog.open(DialogContentPrint, {\n      data: {\n        project: this.userService.loggedIn.selectedProject._id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n\n    });\n\n  }\n}\n\n@Component({\n  selector: 'dialog-content-print',\n  templateUrl: 'dialog-content-print.html',\n})\nexport class DialogContentPrint {\n  constructor(@Inject (MAT_DIALOG_DATA) public data: DialogData) { }\n}\n\n@Component({\n  selector: 'snack-bar-component-message',\n  templateUrl: 'snack-bar-component-message.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class MessageSnackComponent { }\n","<mat-toolbar color=\"primary\">\n  <span> {{ title }} </span>\n  <span class=\"example-fill-remaining-space\"></span>\n  <div *ngIf=\"userService.loggedIn\">\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"home\" matTooltip=\"Home\">\n      <mat-icon>home</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" *ngIf=\"userService.loggedIn.selectedUserType != 'Security'\" routerLink=\"gatepass\" matTooltip=\"Create Gate Pass\">\n      <mat-icon>create</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" (click)=\"print()\" matTooltip=\"Print Gate Pass\">\n      <mat-icon>print</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"filter\" matTooltip=\"Reports\">\n      <mat-icon>list</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"admin/authorization\" *ngIf=\"userService.loggedIn.selectedUserType === 'Admin' || userService.loggedIn.selectedUserType === 'Super Admin'\" matTooltip=\"Authorization\">\n      <mat-icon>admin_panel_settings</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"inbox\" *ngIf=\"userService.loggedIn.selectedUserType === 'Admin' || userService.loggedIn.selectedUserType === 'Super Admin'\" matTooltip=\"Inbox\">\n      <mat-icon>inbox</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"admin/data-control\" *ngIf=\"userService.loggedIn.selectedUserType === 'Super Admin'\" matTooltip=\"Data Management\">\n      <mat-icon>build</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" routerLink=\"profile\" matTooltip=\"Profile\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n    <button mat-icon-button class=\"toolbar-btn\" (click)=\"logOut()\" routerLink=\"login\" matTooltip=\"Logout\">\n      <mat-icon>exit_to_app</mat-icon>\n    </button>\n  </div>\n  <span><img src=\"../assets/NTPC_Logo.png\" class=\"image\"></span>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div class=\"footer\">\n  <!-- <div class=\"container\">\n    <div class=\"content has-text-centered\"> -->\n      <p>\n        Made with ❤️ by <a class=\"github\" href=\"https://github.com/PrateekUpd\" target=\"_blank\">Prateek Upadhyay</a>\n      </p>\n    <!-- </div>\n  </div> -->\n</div>\n<!-- <app-messages></app-messages> -->\n","<h2 mat-dialog-title>Print Gate Pass</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n<app-gatepass-search [print]=\"'1'\" [project]='data.project'></app-gatepass-search>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n</mat-dialog-actions>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent, DialogContentPrint } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport { AdminDataControlComponent } from './admin-data-control/admin-data-control.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { GatePassComponent, GpCreatedComponent } from './gate-pass/gate-pass.component';\nimport { ReportComponent } from './report/report.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AdminAuthorizationComponent, AlreadyAuthComponent } from './admin-authorization/admin-authorization.component';\nimport { EmployeeSearchComponent } from './employee-search/employee-search.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatIconModule} from '@angular/material/icon';\nimport { FilterGatePassComponent } from './filter-gate-pass/filter-gate-pass.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { ReturnComponent, DialogContentReturn, ReturnSnackComponent } from './return/return.component';\nimport { GatepassSearchComponent } from './gatepass-search/gatepass-search.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { CdkColumnDef, CdkTableModule, NoDataRowOutlet, CdkNoDataRow } from '@angular/cdk/table';\nimport { ProfileComponent, DialogContentHome, UserEditedComponent } from './profile/profile.component';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { TokenInterceptor } from './token.interceptor';\nimport { QuantityRetValidatorDirective } from './quantity-ret-validator.directive';\nimport { InboxComponent } from './inbox/inbox.component';\n// import {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    MessagesComponent,\n    HomeComponent,\n    AdminDataControlComponent,\n    GatePassComponent,\n    ReportComponent,\n    DialogContentReturn,\n    DialogContentPrint,\n    DialogContentHome,\n    AdminAuthorizationComponent,\n    EmployeeSearchComponent,\n    AlreadyAuthComponent,\n    FilterGatePassComponent,\n    ReturnComponent,\n    GatepassSearchComponent,\n    UserEditedComponent,\n    GpCreatedComponent,\n    ReturnSnackComponent,\n    ProfileComponent,\n    PageNotFoundComponent,\n    QuantityRetValidatorDirective,\n    InboxComponent,\n  ],\n  entryComponents: [\n    ReportComponent,\n    AlreadyAuthComponent,\n    FilterGatePassComponent,\n    DialogContentReturn,\n    DialogContentPrint,\n    DialogContentHome,\n    UserEditedComponent,\n    GpCreatedComponent,\n    ReturnSnackComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSliderModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatGridListModule,\n    AppRoutingModule,\n    FormsModule,\n    MatTableModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatTableExporterModule,\n    MatStepperModule\n  ],\n  providers: [\n    // { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    CdkColumnDef,\n    CdkTableModule,\n    NoDataRowOutlet,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { User } from '../models/user';\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\nimport { UserService } from '../services/user/user.service';\nimport { AdminAuthorizationComponent } from '../admin-authorization/admin-authorization.component';\n\n@Component({\n  selector: 'app-employee-search',\n  templateUrl: './employee-search.component.html',\n  styleUrls: ['./employee-search.component.css']\n})\n\nexport class EmployeeSearchComponent implements OnInit {\n\n  users$: Observable<User[]>;\n  private searchTerms = new Subject<string>();\n  @Input() selectedAuth: boolean;\n  @Input() selectedCreation: boolean;\n  @Input() selectedProject: string;\n  constructor(private userService: UserService, private adminAuth: AdminAuthorizationComponent) { }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.userService.searchUsers(term, this.selectedAuth, this.selectedProject)),\n\n    );\n    // this.userFunc();\n  }\n\n\n  selectFunc(user: User) {\n    if(this.selectedAuth) {\n      this.adminAuth.selectedAuthUser = user\n    }\n    else {\n      this.adminAuth.selectedUnAuthUser = user\n    }\n  }\n}\n","<!-- <div id=\"search-component\">\n  <h4><label for=\"search-box\">Employee Search</label></h4>\n\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let user of users$ | async\">\n      <a routerLink=\"/detail/{{user._id}}\">\n        {{user.empId}} {{user.name}}\n      </a>\n    </li>\n  </ul>\n</div> -->\n<mat-form-field appearance=\"standard\">\n  <mat-label>Employee Search</mat-label>\n  <input matInput type=\"text\" placeholder=\"Search By Emp Name\" #searchBox aria-label=\"Number\" matInput [matAutocomplete]=\"auto\"\n    (input)=\"search(searchBox.value)\">\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let user of users$ | async\" [value]=\"user.name\" (onSelectionChange)=\"selectFunc(user)\">\n      {{user.empId}} {{user.name}} {{user.selectedDepartment.viewValue}} {{user.selectedGrade.viewValue}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-filter-gate-pass',\n  templateUrl: './filter-gate-pass.component.html',\n  styleUrls: ['./filter-gate-pass.component.css']\n})\nexport class FilterGatePassComponent implements OnInit {\n\n  filterForm: FormGroup;\n\n  constructor(public userService: UserService, private fb: FormBuilder, private router: Router) {\n    this.filterForm = this.fb.group({\n      selectedDepartment: new FormControl('', Validators.required),\n      selectedType: new FormControl('', Validators.required),\n      selectedOwner: new FormControl('', Validators.required),\n      selectedMovement: new FormControl('', Validators.required),\n      from: new FormControl('', Validators.compose([Validators.required])),\n      to: new FormControl('', Validators.required),\n      selectedProject: new FormControl(this.userService.loggedIn.selectedProject._id)\n    });\n\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(filterForm) {\n    if(filterForm.selectedDepartment === 'Own Department') {\n    filterForm.selectedDepartment = this.userService.loggedIn.selectedDepartment._id;\n    }\n    console.log(filterForm);\n    this.userService.getFilterGpArray( filterForm )\n      .subscribe((gpArrays) => {\n        this.userService.gpArrays = gpArrays;\n        this.router.navigate(['report']);\n      })\n  }\n\n}\n","<div class=\"search-div\">\n<app-gatepass-search [project]='userService.loggedIn.selectedProject._id' [print]=\"'0'\"></app-gatepass-search>\n</div>\n<h3>OR</h3>\n<hr>\n<div class=\"filter-div\">\n<form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit(filterForm.value)\">\n<mat-card class=\"filter-card\">\n  <mat-card-header>\n    <mat-card-title>Filter</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Department</mat-label>\n        <mat-select formControlName=\"selectedDepartment\">\n          <mat-option value=\"Own Department\">Own Department</mat-option>\n          <mat-option value=\"All\">All</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Type</mat-label>\n        <mat-select formControlName=\"selectedType\">\n          <mat-option value=\"Returnable\">Returnable</mat-option>\n          <mat-option value=\"Non-Returnable\">Non-Returnable</mat-option>\n          <mat-option value=\"Pending Returnable\">Pending Returnable</mat-option>\n          <mat-option value=\"All\">All</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Owner</mat-label>\n        <mat-select formControlName=\"selectedOwner\">\n          <mat-option value=\"NTPC\">NTPC</mat-option>\n          <mat-option value=\"Vendor\">Vendor</mat-option>\n          <mat-option value=\"All\">All</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Movement</mat-label>\n        <mat-select formControlName=\"selectedMovement\">\n          <mat-option value=\"In\">In</mat-option>\n          <mat-option value=\"Out\">Out</mat-option>\n          <mat-option value=\"Within\">Within</mat-option>\n          <mat-option value=\"All\">All</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field>\n        <mat-label>Enter a date range</mat-label>\n        <mat-date-range-input [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"from\" placeholder=\"Start date\">\n          <input matEndDate formControlName=\"to\" placeholder=\"End date\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n\n        <!-- <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error> -->\n      </mat-form-field>\n    </div>\n\n    <!-- <div>\n      <mat-form-field>\n        <mat-label>From</mat-label>\n        <input matInput [matDatepicker]=\"picker1\" formControlName=\"from\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker #picker1></mat-datepicker>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field>\n        <mat-label>To</mat-label>\n        <input matInput [matDatepicker]=\"picker2\" formControlName=\"to\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <mat-datepicker #picker2></mat-datepicker>\n      </mat-form-field>\n    </div> -->\n\n  </mat-card-content>\n  <mat-card-actions class=\"filter-card-button\">\n    <button mat-icon-button color=\"accent\" [disabled]=\"!filterForm.valid\">\n      <mat-icon>filter_alt</mat-icon>\n    </button>\n  </mat-card-actions>\n</mat-card>\n</form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { rowsAnimation } from '../animations/template.animations';\nimport { FormBuilder, FormControl, FormGroup, FormArray, Validators, NgForm } from '@angular/forms';\nimport { UserService } from '../services/user/user.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MaterialGatePass } from '../models/gatePass';\nimport { Department } from '../models/department';\nimport { GpArray } from '../models/gpArray'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Create } from '../models/create';\nimport { Gate } from '../models/gate';\nimport { Unit } from '../models/unit';\nimport { Project } from '../models/project';\n\ninterface Type {\n  viewValue: string;\n}\ninterface Owner {\n  viewValue: string;\n}\ninterface Movement {\n  viewValue: string;\n}\n// interface Gate {\n//   viewValue: string;\n// }\n\n@Component({\n  selector: 'app-gate-pass',\n  templateUrl: './gate-pass.component.html',\n  styleUrls: ['./gate-pass.component.css'],\n  animations: [rowsAnimation]\n})\nexport class GatePassComponent implements OnInit {\n\n\n  createForm: Create = {\n    name: this.userService.loggedIn.name,\n    selectedGate: null,\n    selectedDepartment: this.userService.loggedIn.selectedDepartment,\n    selectedProject: this.userService.loggedIn.selectedProject,\n    selectedType: null,\n    selectedOwner: null,\n    selectedMovement: null,\n    receiver: null,\n    firm: null,\n    vendorName: null,\n  };\n\n  dcGatePass = ['sno', 'modeOfTransport', 'description', 'quantity', 'unit', 'issuedTo', 'from', 'to', 'reason', 'remark', 'dateOfReturn'];\n  dsGatePass: MatTableDataSource<MaterialGatePass>;\n  gatePasses: MaterialGatePass[] = [];\n\n  // gatePassForm;\n  constructor(private userService: UserService, private fb: FormBuilder, private _snackBar: MatSnackBar, private router: Router) {\n    // this.gatePasses.push(this.createNewGatePass(1));\n    this.dsGatePass = new MatTableDataSource(this.gatePasses);\n    // this.gatePassForm = this.fb.group({\n    //   selectedGate: new FormControl('', Validators.required),\n    //   selectedType: new FormControl('', Validators.required),\n    //   selectedOwner: new FormControl('', Validators.required),\n    //   selectedMovement: new FormControl('', Validators.required),\n    //   receiver: new FormControl('', Validators.required),\n    //   firm: new FormControl('', Validators.required),\n    //   sno: new FormControl('', Validators.required),\n    //   modeOfTransport: new FormControl('', Validators.required),\n    //   description: new FormControl('', Validators.required),\n    //   quantity: new FormControl('', Validators.required),\n    //   unit: new FormControl('', Validators.required),\n    //   issuedTo: new FormControl('', Validators.required),\n    //   from: new FormControl('', Validators.required),\n    //   to: new FormControl('', Validators.required),\n    //   reason: new FormControl('', Validators.required),\n    //   remark: new FormControl('', Validators.required),\n    //   dateOfReturn: new FormControl('', Validators.required),\n    // })\n  }\n\n  ngOnInit(): void {\n    this.gatePasses.push(this.createNewGatePass(1));\n    this.getProjects();\n    this.getDepartments();\n    this.getUnits();\n    // this.disableInput();\n  }\n\n  setGates() {\n    const selectedProject = this.projects.find(project => project._id = this.userService.loggedIn.selectedProject._id)\n    this.gates = selectedProject.gates\n  }\n\n  // disableInput() {\n  //   this.createForm.get('name').disable();\n  // }\n  selectedUnit: string;\n  selectedType: string;\n  selectedOwner: string;\n  selectedMovement: string;\n  selectedGate: string;\n  selectedDepartment: string;\n\n  types: Type[] = [\n    { viewValue: 'Returnable' },\n    { viewValue: 'Non-Returnable' },\n  ];\n  owners: Owner[] = [\n    { viewValue: 'NTPC' },\n    { viewValue: 'Vendor' },\n  ];\n  movements: Movement[] = [\n    { viewValue: 'In' },\n    { viewValue: 'Out' },\n    { viewValue: 'Within' },\n  ];\n  // gates: Gate[] = [\n  //   { viewValue: 'Gate No. 1' },\n  //   { viewValue: 'Gate No. 2' },\n  //   { viewValue: 'Gate No. 3' },\n  // ];\n\n  Units: Unit[];\n  departments: Department[];\n  gates: Gate[];\n  projects: Project[];\n\n  getDepartments() {\n    this.userService.getDepartments()\n      .subscribe(departments => this.departments = departments);\n  }\n\n  getUnits() {\n    this.userService.getUnits()\n      .subscribe(units => this.Units = units);\n  }\n\n  getProjects() {\n    this.userService.getProjects()\n      .subscribe(projects => {\n        this.projects = projects;\n        this.setGates();\n      })\n  }\n\n  dcDate;\n  dateFunc(value) {\n    console.log(value)\n    // this.createForm.controls.selectedType.value\n    for (const dc of this.dcGatePass) {\n      if (dc == \"dateOfReturn\") {\n        this.dcDate = true;\n        break;\n      }\n      else {\n        this.dcDate = false;\n      }\n    }\n    if (value === \"Non-Returnable\" && this.dcDate === true) {\n      this.dcGatePass.pop();\n      this.gatePasses.forEach(gatePass => {\n        gatePass.dateOfReturn = null;\n      })\n    }\n    else if (value === \"Returnable\" && this.dcDate === false) {\n      this.dcGatePass.push('dateOfReturn');\n    }\n\n  }\n\n  createNewGatePass(sno: number): MaterialGatePass {\n    return {\n      sno: sno,\n      modeOfTransport: null, description: null, quantity: null, unit: null,\n      issuedTo: null, dateOfReturn: null, from: null,\n      to: null, reason: null, remark: null, incomingRef: null\n    };\n  }\n\n  addRow() {\n    this.dsGatePass.data.push(this.createNewGatePass(this.dsGatePass.data.length + 1));\n    this.dsGatePass.filter = \"\";\n  }\n\n  deleteRow() {\n    if (this.dsGatePass.data.length == 1) {\n      return;\n    }\n    this.dsGatePass.data.pop();\n    this.dsGatePass.filter = \"\";\n  }\n\n  gpArray: GpArray = { gatePassNo: 0, createForm: null, createdBy: null, authorized: null, authorizedDate: null, status: 'Created', gatePass: [] }\n  onSubmitFunc() {\n    if (this.gatePasses === [] || !this.createForm) {\n      alert(\"Please fill all the fields\");\n    }\n    else {\n      this.gpArray.createForm = this.createForm\n      this.gpArray.gatePass = this.gatePasses\n      this.gpArray.createdBy = this.userService.loggedIn\n      this.userService.addGpArray(this.gpArray as GpArray)\n        .subscribe((gpArray) => {\n          // alert(\"Form Submitted\")\n          this._snackBar.openFromComponent(GpCreatedComponent, {\n            duration: 3 * 1000,\n          });\n          this.userService.selectedGpArray = gpArray;\n          this.userService.storeGpArray(gpArray.gatePassNo);\n          this.router.navigate(['return']);\n        })\n      console.log(this.gpArray)\n    }\n  }\n\n}\n// authorized:{_id: null, name: null, empId:null, password: null, selectedProject: null, selectedGrade: null, selectedDepartment: null, selectedAuthorization:null, selectedCreation: null }\n\n@Component({\n  selector: 'snack-bar-component-gpCreated',\n  templateUrl: 'snack-bar-component-gpCreated.html',\n  styles: [`\n    .gp-created {\n      color: hotpink;\n    }\n  `],\n})\nexport class GpCreatedComponent { }\n","<h1>Material Gate Pass Creation Form</h1>\n<form #myForm=\"ngForm\">\n<!-- <form [formGroup]=\"createForm\" (ngSubmit)=\"onSubmitFunc(createForm.value)\"> -->\n  <mat-card class=\"mat-elevation-z8 create-card\">\n    <mat-grid-list cols=\"5\" rowHeight=\"5:1\">\n      <!-- <fieldset [disabled]='true'> -->\n        <mat-grid-tile>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Name</mat-label>\n            <input matInput [disabled]=\"true\" [(ngModel)]=\"createForm.name\" placeholder=\"Name\" name=\"name\" />\n          </mat-form-field>\n        </mat-grid-tile>\n      <!-- </fieldset> -->\n\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Department</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedDepartment._id\" name=\"department\" [disabled]=\"true\" >\n            <mat-option *ngFor=\"let department of departments\" [value]=\"department._id\">\n              {{ department.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Project</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedProject._id\" name=\"project\" [disabled]=\"true\" >\n            <mat-option *ngFor=\"let project of projects\" [value]=\"project._id\">\n              {{ project.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Type</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedType\" name=\"type\" #typeSelect (valueChange)='dateFunc(typeSelect.value)' required>\n            <mat-option *ngFor=\"let type of types\" [value]=\"type.viewValue\">\n              {{ type.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Owner</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedOwner\" name=\"owner\" required>\n            <mat-option *ngFor=\"let owner of owners\" [value]=\"owner.viewValue\">\n              {{ owner.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Movement</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedMovement\" name=\"movement\" required>\n            <mat-option *ngFor=\"let movement of movements\" [value]=\"movement.viewValue\">\n              {{ movement.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field>\n          <mat-label>Gate</mat-label>\n          <mat-select [(ngModel)]=\"createForm.selectedGate\" name=\"gate\" required>\n            <mat-option *ngFor=\"let gate of gates\" [value]=\"gate._id\">\n              {{ gate.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Receiver</mat-label>\n          <input matInput [(ngModel)]=\"createForm.receiver\" placeholder=\"Receiver\" name=\"receiver\" required/>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile>\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Firm Represented</mat-label>\n          <input matInput [(ngModel)]=\"createForm.firm\" placeholder=\"Firm Represented\" name=\"firm\" required/>\n        </mat-form-field>\n      </mat-grid-tile>\n\n      <mat-grid-tile *ngIf=\"createForm.selectedOwner == owners[1].viewValue\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Vendor Name</mat-label>\n          <input matInput [(ngModel)]=\"createForm.vendorName\" placeholder=\"Vendor Name\" name=\"vendor\" required/>\n        </mat-form-field>\n      </mat-grid-tile>\n\n    </mat-grid-list>\n  </mat-card>\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"onSubmitFunc()\" [disabled]=\"myForm.invalid\" class=\"general-button\">Submit</button>\n\n\n<div class=\"row-button\">\n  <button mat-raised-button type=\"button\" (click)=\"addRow()\">Add row</button>\n  <button mat-raised-button type=\"button\" (click)=\"deleteRow()\" [disabled]=\"gatePasses.length == 1\">Delete row</button>\n</div>\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table [dataSource]=\"dsGatePass\">\n\n    <ng-container matColumnDef=\"sno\">\n      <mat-header-cell *matHeaderCellDef> SNo. </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\" class=\"first\">\n        {{element.sno}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"modeOfTransport\">\n      <mat-header-cell *matHeaderCellDef> Mode Of Transport </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #modeOfTransport=\"ngModel\" name=\"modeOfTransport-{{i}}\" [(ngModel)]=\"element.modeOfTransport\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #description=\"ngModel\" name=\"description-{{i}}\" [(ngModel)]=\"element.description\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantity\">\n      <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"number\" #quantity=\"ngModel\" name=\"quantity-{{i}}\" [(ngModel)]=\"element.quantity\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"unit\">\n      <mat-header-cell *matHeaderCellDef> Unit </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field>\n          <mat-select #unit=\"ngModel\" [(ngModel)]=\"element.unit\" name=\"unit-{{i}}\" required>\n            <mat-option *ngFor=\"let Unit of Units\" [value]=\"Unit._id\">\n              {{ Unit.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"issuedTo\">\n      <mat-header-cell *matHeaderCellDef> Issued To </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #issuedTo=\"ngModel\" name=\"issuedTo-{{i}}\" [(ngModel)]=\"element.issuedTo\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfReturn\">\n      <mat-header-cell *matHeaderCellDef> Date Of Return </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <input matInput\n          [matDatepicker]=\"picker1\" #dateOfReturn=\"ngModel\" [(ngModel)]=\"element.dateOfReturn\" name=\"dateOfReturn-{{i}}\" required readonly='true'>\n        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n        <mat-datepicker #picker1></mat-datepicker>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"from\">\n      <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #from=\"ngModel\" name=\"from-{{i}}\" [(ngModel)]=\"element.from\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"to\">\n      <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #to=\"ngModel\" name=\"to-{{i}}\" [(ngModel)]=\"element.to\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"reason\">\n      <mat-header-cell *matHeaderCellDef> Reason </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #reason=\"ngModel\" name=\"reason-{{i}}\" [(ngModel)]=\"element.reason\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"remark\">\n      <mat-header-cell *matHeaderCellDef> Remark </mat-header-cell>\n      <mat-cell *matCellDef=\"let element; let i = index;\">\n        <mat-form-field> <input matInput type=\"text\" #remark=\"ngModel\" name=\"remark-{{i}}\" [(ngModel)]=\"element.remark\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container>\n\n    <!-- <ng-container matColumnDef=\"incomingRef\">\n      <mat-header-cell *matHeaderCellDef> Incoming Reference </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\" class=\"last\">\n        <mat-form-field> <input matInput type=\"text\" [(ngModel)]=\"element.incomingRef\" required /></mat-form-field>\n      </mat-cell>\n    </ng-container> -->\n    <mat-header-row *matHeaderRowDef=\"dcGatePass; sticky: true\"></mat-header-row>\n    <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcGatePass;\"></mat-row>\n  </mat-table>\n</div>\n</form>\n<!-- <button mat-raised-button color=\"primary\" type=\"submit\" class=\"general-button\" (click)=\"onClickMe()\">Create</button> -->\n<!-- <br><br><br><br>\n<mat-accordion>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Table value\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <code *ngFor=\"let pass of gatePasses\">\n    <ul>{{pass.modeOfTransport}} {{pass.description}} {{pass.quantity}} {{pass.unit}} {{pass.issuedTo}} {{pass.dateOfReturn}} {{pass.from}} {{pass.to}} {{pass.reason}} {{pass.remark}} {{pass.incomingRef}}</ul>\n    </code>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<div *ngIf=\"getGatePasses\">\n  <div *ngFor=\"let getGatePass of getGatePasses\">\n    {{getGatePass.modeOfTransport}} {{getGatePass.description}} {{getGatePass.quantity}} {{getGatePass.unit}}\n    {{getGatePass.issuedTo}} {{getGatePass.dateOfReturn}} {{getGatePass.from}} {{getGatePass.to}} {{getGatePass.reason}}\n    {{getGatePass.remark}} {{getGatePass.incomingRef}}\n  </div>\n</div>\n<button mat-raised-button color=\"accent\" (click)=\"getGatePassFunc()\">Get Gate Pass</button> -->\n","<span class=\"gp-created\">\r\n  <mat-icon aria-hidden=\"false\" aria-label=\"Party Icon\">done_outline</mat-icon>\r\n  Gate Pass Created Successfully!\r\n</span>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\nimport { GpArray } from '../models/gpArray';\nimport { UserService } from '../services/user/user.service';\nimport { Router } from '@angular/router';\nimport { PrintService } from '../services/print/print.service';\n@Component({\n  selector: 'app-gatepass-search',\n  templateUrl: './gatepass-search.component.html',\n  styleUrls: ['./gatepass-search.component.css']\n})\nexport class GatepassSearchComponent implements OnInit {\n\n  gatePasses$: Observable<GpArray[]>;\n  private searchTerms = new Subject<string>();\n  @Input() print: string;\n  @Input() project: string;\n\n  constructor(private userService: UserService, private router: Router, private printService: PrintService) { }\n\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.gatePasses$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.userService.searchGatePasses(term, this.print, this.project)),\n\n    );\n    // this.userFunc();\n  }\n\n\n  selectFunc(gpArray: GpArray) {\n    if(this.print === '1') {\n      this.printService.generatePdf(gpArray, 'Print')\n    }\n    else {\n    this.userService.selectedGpArray = gpArray;\n    this.userService.storeGpArray(gpArray.gatePassNo);\n    this.router.navigate(['return']);\n    }\n  }\n}\n","<mat-form-field appearance=\"standard\">\n  <mat-label>Search Gate Pass</mat-label>\n  <input matInput type=\"number\" placeholder=\"Search By Gate Pass No.\" #searchBox aria-label=\"Number\" matInput [matAutocomplete]=\"auto\"\n    (input)=\"search(searchBox.value)\">\n  <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n    <mat-option *ngFor=\"let gatePass of gatePasses$ | async\" [value]=\"gatePass.gatePassNo\" (onSelectionChange)=\"selectFunc(gatePass)\">\n      {{gatePass.gatePassNo}} {{gatePass.createForm.name}} {{gatePass.createdAt | date}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.loggedIn\n    if (user) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizeGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.loggedIn\n    if (user.selectedAuthorization) {\n      return true;\n    }\n    this.router.navigate(['home'])\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.loggedIn\n    if (user.selectedCreation) {\n      return true;\n    }\n    this.router.navigate(['home'])\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.loggedIn\n    if(user) {\n      this.router.navigate(['home'])\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const user = this.userService.loggedIn\n    if (user.selectedUserType === 'Admin' || user.selectedUserType === 'Super Admin') {\n      return true;\n    }\n    this.router.navigate(['home'])\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuperAdminGuard implements CanActivate {\n  constructor(private router: Router, private userService: UserService) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const user = this.userService.loggedIn\n      if (user.selectedUserType === 'Super Admin') {\n        return true;\n      }\n      this.router.navigate(['home'])\n      return false;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user/user.service';\nimport { Router } from '@angular/router';\nimport { rowsAnimation } from '../animations/template.animations';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  animations: [rowsAnimation]\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public userService: UserService, private router: Router,) {\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n\n","<h1>Welcome {{userService.loggedIn.name}} to the NTPC {{userService.loggedIn.selectedProject.viewValue}} Material Gate Pass System</h1>\n<!-- <img class=\"home-image\" src=\"../../assets/bg.png\" alt=\"\" /> -->\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { rowsAnimation } from '../animations/template.animations';\nimport { GpArray } from '../models/gpArray';\nimport { SearchTable } from '../models/searchTable';\nimport { Unit } from '../models/unit';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n  styleUrls: ['./inbox.component.css'],\n  animations: [rowsAnimation],\n})\nexport class InboxComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'sno', 'description', 'quantity', 'unit', 'dateOfCreation', 'dueDateOfReturn', 'department', 'createdBy', 'owner', 'movement', 'status'];\n  dataSource: MatTableDataSource<SearchTable>;\n\n  authDisplayedColumns: string[] = ['id', 'sno', 'description', 'quantity', 'unit', 'dateOfCreation', 'dueDateOfReturn', 'department', 'createdBy', 'owner', 'movement', 'status'];\n  authDataSource: MatTableDataSource<SearchTable>;\n\n  searchTableData: SearchTable[] = [];\n  authSearchTableData: SearchTable[] = []\n\n  constructor(private userService: UserService, public dialog: MatDialog, private router: Router) { }\n\n  Units: Unit[];\n\n  ngOnInit(): void {\n    this.getGpArray();\n    this.getAuthGpArray();\n  }\n\n  filterData(gpArrays) {\n    for (const gp of gpArrays) {\n      for (const tableRow of gp.gatePass) {\n        if (tableRow.sno == 1) {\n          this.searchTableData.push({\n            id: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n        else {\n          this.searchTableData.push({\n            vId: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n      }\n    }\n  }\n\n  authFilterData(gpArrays) {\n    for (const gp of gpArrays) {\n      for (const tableRow of gp.gatePass) {\n        if (tableRow.sno == 1) {\n          this.authSearchTableData.push({\n            id: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n        else {\n          this.authSearchTableData.push({\n            vId: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n      }\n    }\n  }\n\n  rId;\n  getRecord(row) {\n    row.id == null ? this.rId = row.vId : this.rId = row.id;\n    const gp = this.gpArrays.find(gp => gp.gatePassNo == this.rId);\n    this.onSelect(gp);\n    // for(const gp of this.gpArrays) {\n    //   if(gp.gatePassNo === this.rId) {\n    //     this.onSelect(gp);\n    //     console.log(gp);\n    //     break;\n    //   }\n    // }\n  }\n\n  aRId;\n  authGetRecord(row) {\n    row.id == null ? this.aRId = row.vId : this.aRId = row.id;\n    const gp = this.authGpArrays.find(gp => gp.gatePassNo == this.aRId);\n    this.onSelect(gp);\n    // for(const gp of this.gpArrays) {\n    //   if(gp.gatePassNo === this.rId) {\n    //     this.onSelect(gp);\n    //     console.log(gp);\n    //     break;\n    //   }\n    // }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  authApplyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.authDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loggedIn: User = this.userService.loggedIn\n\n  gpArrays: GpArray[];\n  authGpArrays: GpArray[];\n  // getGpArray() {\n  //   console.log(this.userService.gpArrays)\n  //   if (this.userService.gpArrays == undefined) {\n  //     this.refreshFilter();\n  //   }\n  //   else {\n  //     this.gpArrays = this.userService.gpArrays;\n  //     this.filterData(this.gpArrays)\n  //     this.dataSource = new MatTableDataSource(this.searchTableData);\n  //   }\n  // }\n\n  authToId = []\n  pendingBool = false;\n  authBool = false;\n\n  getGpArray() {\n    this.loggedIn.authorizedTo.forEach(authTo => {\n      this.authToId.push(authTo._id)\n    })\n    console.log(this.authToId)\n    this.userService.getInboxGpArray(this.authToId)\n      .subscribe((gpArrays: GpArray[]) => {\n        this.gpArrays = gpArrays\n        if(this.gpArrays.length > 0) {\n          this.pendingBool = true;\n        }\n        this.filterData(gpArrays)\n        this.dataSource = new MatTableDataSource(this.searchTableData);\n      })\n  }\n\n  getAuthGpArray() {\n    this.userService.getInboxAuthGpArray(this.loggedIn._id)\n      .subscribe((authGpArrays: GpArray[]) => {\n        console.log(authGpArrays)\n        this.authGpArrays = authGpArrays\n        if(this.authGpArrays.length > 0) {\n          this.authBool = true;\n        }\n        this.authFilterData(authGpArrays)\n        this.authDataSource = new MatTableDataSource(this.authSearchTableData)\n      })\n  }\n\n  // refreshFilter() {\n  //   this.userService.getFilterGpArray(this.userService.getFilter())\n  //     .subscribe((gpArrays) => {\n  //       console.log(gpArrays)\n  //       this.userService.gpArrays = gpArrays;\n  //       this.gpArrays = this.userService.gpArrays;\n  //       this.filterData(this.gpArrays)\n  //       this.dataSource = new MatTableDataSource(this.searchTableData);\n  //     })\n  // }\n\n  // selectedGpArray: GpArray;\n  user: User;\n  dcDate;\n  onSelect(gpArray: GpArray): void {\n    this.userService.selectedGpArray = gpArray;\n    this.userService.storeGpArray(gpArray.gatePassNo);\n    this.router.navigate(['return']);\n  }\n\n  getUnits() {\n    this.userService.getUnits()\n      .subscribe(units => this.Units = units);\n  }\n\n\n}\n","<h1>Gate Pass Inbox</h1>\n<div *ngIf=\"pendingBool\">\n  <h2>Pending for Authorization</h2>\n<mat-form-field class=\"filter\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"search term\" #input>\n</mat-form-field>\n\n<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 example-container searchTable\">\n\n  <ng-container matColumnDef=\"id\">\n    <mat-header-cell *matHeaderCellDef> Gate Pass No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"sno\">\n    <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.sno}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"department\">\n    <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.department}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"quantity\">\n    <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.quantity}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"unit\">\n    <mat-header-cell *matHeaderCellDef> Unit </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.unit.viewValue}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dateOfCreation\">\n    <mat-header-cell *matHeaderCellDef> Date Of Creation </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dateOfCreation | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dueDateOfReturn\">\n    <mat-header-cell *matHeaderCellDef> Due Date Of Return </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dueDateOfReturn | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"createdBy\">\n    <mat-header-cell *matHeaderCellDef> Created By </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.createdBy}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"owner\">\n    <mat-header-cell *matHeaderCellDef> Material Owner </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.owner}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"movement\">\n    <mat-header-cell *matHeaderCellDef> Movement </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.movement}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef> Material Description </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.description}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n  <mat-row [@rowsAnimation]=\"\" (click)=\"getRecord(row)\"\n    *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n  <!-- <mat-row class=\"mat-row\" *matNoDataRow>\n    <mat-cell class=\"mat-cell\" colspan=\"12\">No data matching the filter \"{{input.value}}\"</mat-cell>\n  </mat-row> -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</mat-table>\n</div>\n\n<!-- AUTHORIZED TABLE -->\n<div *ngIf=\"authBool\">\n  <h2>Authorized</h2>\n<mat-form-field class=\"filter\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"authApplyFilter($event)\" placeholder=\"search term\" #authInput>\n</mat-form-field>\n\n<mat-table [dataSource]=\"authDataSource\" class=\"mat-elevation-z8 example-container searchTable\">\n\n  <ng-container matColumnDef=\"id\">\n    <mat-header-cell *matHeaderCellDef> Gate Pass No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"sno\">\n    <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.sno}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"department\">\n    <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.department}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"quantity\">\n    <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.quantity}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"unit\">\n    <mat-header-cell *matHeaderCellDef> Unit </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.unit.viewValue}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dateOfCreation\">\n    <mat-header-cell *matHeaderCellDef> Date Of Creation </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dateOfCreation | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dueDateOfReturn\">\n    <mat-header-cell *matHeaderCellDef> Due Date Of Return </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dueDateOfReturn | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"createdBy\">\n    <mat-header-cell *matHeaderCellDef> Created By </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.createdBy}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"owner\">\n    <mat-header-cell *matHeaderCellDef> Material Owner </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.owner}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"movement\">\n    <mat-header-cell *matHeaderCellDef> Movement </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.movement}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef> Material Description </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.description}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n  <mat-row [@rowsAnimation]=\"\" (click)=\"authGetRecord(row)\"\n    *matRowDef=\"let row; columns: authDisplayedColumns;\"></mat-row>\n\n  <!-- <mat-row class=\"mat-row\" *matNoDataRow>\n    <mat-cell class=\"mat-cell\" colspan=\"12\">No data matching the filter \"{{input.value}}\"</mat-cell>\n  </mat-row> -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{authInput.value}}\"</td>\n  </tr>\n</mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user/user.service';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  user: User;\n  loginForm;\n\n  constructor(private router: Router, private fb: FormBuilder, private userService: UserService) {\n    this.loginForm = this.fb.group({\n      empId: new FormControl('', Validators.compose([Validators.required, Validators.maxLength(7), Validators.minLength(6)])),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    // this.checkLogin();\n  }\n\n  onSubmit(loginData) {\n    if (!loginData) { return; }\n    this.userService.loginUser(loginData as User)\n      .subscribe(user => {\n        if (user) {\n          // this.userService.loggedIn = user;\n          this.router.navigate(['home']);\n        }\n          this.loginForm.reset();\n      },\n      error => {\n        alert('Login Failed')\n      });\n  }\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n  <mat-card class=\"login-card\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"EmpId\" formControlName=\"empId\" type=\"text\" type=\"number\" />\n        </mat-form-field>\n      </div>\n      <div class=\"row\">\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Password\" formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" />\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\" type=\"button\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions class=\"button\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n<nav><a class=\"register\" routerLink=\"/register\">Register?</a></nav>\n<br>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../services/message/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n  <h2>Messages</h2>\n  <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"error\"> ⚠️ 404</h1>\n<h1 class=\"header-text\">!!Page Not Found!!</h1>\n","import { Component, OnInit } from '@angular/core';\nimport { rowsAnimation } from '../animations/template.animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ProjectArray } from '../models/projectArray';\nimport { GradeArray } from '../models/gradeArray';\nimport { DepartmentArray } from '../models/departmentArray';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user/user.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Project } from '../models/project';\nimport { Grade } from '../models/grade';\nimport { Department } from '../models/department';\n\n\ninterface Authorization {\n  value: boolean;\n  viewValue: string;\n}\ninterface Creation {\n  value: boolean;\n  viewValue: string;\n}\ninterface UserType {\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  animations: [rowsAnimation]\n})\nexport class ProfileComponent implements OnInit {\n\n\n  dcUserAuthTo = ['empId', 'name', 'department', 'grade', 'project', 'authorization', 'creation'];\n  dsUserAuthTo: MatTableDataSource<User>;\n\n  dcUserHistory = ['department', 'from', 'to'];\n  dsUserHistory: MatTableDataSource<DepartmentArray>\n\n  dcUserHistoryGrade = ['grade', 'from', 'to'];\n  dsUserHistoryGrade: MatTableDataSource<GradeArray>\n\n  dcUserHistoryProject = ['project', 'from', 'to'];\n  dsUserHistoryProject: MatTableDataSource<ProjectArray>\n\n  constructor(private userService: UserService, private router: Router, public dialog: MatDialog, private _snackBar: MatSnackBar) {\n    this.dsUserAuthTo = new MatTableDataSource(this.user.authorizedTo)\n    this.dsUserHistory = new MatTableDataSource(this.user.Department)\n    this.dsUserHistoryGrade = new MatTableDataSource(this.user.Grade)\n    this.dsUserHistoryProject = new MatTableDataSource(this.user.Project)\n  }\n\n  user = this.userService.loggedIn;\n\n  ngOnInit(): void {\n    this.redirectFunc()\n    this.getProjects();\n    this.getGrades();\n    this.getDepartments();\n    this.checkUserType();\n  }\n\n  showBool = true;\n  checkUserType() {\n    if(this.user.selectedUserType === 'Security') {\n      this.showBool = false;\n    }\n  }\n\n  projects: Project[];\n  grades: Grade[];\n  departments: Department[];\n  userTypes: UserType[] = [\n    { viewValue: 'Super Admin' },\n    { viewValue: 'Admin' },\n    { viewValue: 'User' },\n  ];\n  authorizations: Authorization[] = [\n    { value: true, viewValue: 'Yes' },\n    { value: false, viewValue: 'No' },\n  ];\n  creations: Creation[] = [\n    { value: true, viewValue: 'Yes' },\n    { value: false, viewValue: 'No' },\n  ];\n\n  getProjects() {\n    this.userService.getProjects()\n      .subscribe(projects => this.projects = projects);\n  }\n\n  getGrades() {\n    this.userService.getGrades()\n      .subscribe(grades => this.grades = grades);\n  }\n\n  getDepartments() {\n    this.userService.getDepartments()\n      .subscribe(departments => this.departments = departments);\n  }\n\n  redirectFunc() {\n    if (this.user === null || this.user === undefined) {\n      this.router.navigate(['login']);\n    }\n  }\n\n  cancel() {\n    this.userService.getUser(this.user._id)\n      .subscribe((user) => this.user = user)\n    this.disableTextbox = !this.disableTextbox;\n  }\n\n  disableTextbox = true;\n  toggleEdit() {\n    this.disableTextbox = !this.disableTextbox;\n  }\n\n\n  updateUser() {\n    const dialogRef = this.dialog.open(DialogContentHome);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n      if (result == true) {\n        this.userService.updateUser(this.user as User)\n          .subscribe((updatedUser) => {\n            // this.user = this.userService.loggedIn\n            if (this.user.Department != updatedUser.Department) {\n              this.dsUserHistory = new MatTableDataSource(updatedUser.Department)\n            }\n            if (this.user.Grade != updatedUser.Grade) {\n              this.dsUserHistoryGrade = new MatTableDataSource(updatedUser.Grade)\n            }\n            if (this.user.Project != updatedUser.Project) {\n              this.dsUserHistoryProject = new MatTableDataSource(updatedUser.Project)\n            }\n            this.userService.loggedIn = updatedUser\n            this.disableTextbox = true;\n            this._snackBar.openFromComponent(UserEditedComponent, {\n              duration: 3 * 1000,\n            });\n          });\n      }\n      else {\n        this.cancel();\n      }\n\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-content-home',\n  templateUrl: 'dialog-content-home.html',\n})\nexport class DialogContentHome { }\n\n@Component({\n  selector: 'snack-bar-component-userEdited',\n  templateUrl: 'snack-bar-component-userEdited.html',\n  styles: [`\n    .user-edited {\n      color: hotpink;\n    }\n  `],\n})\nexport class UserEditedComponent { }\n","<h1>Welcome {{user.name}} to the Material Gate Pass System</h1>\n<div class=\"user-div\">\n  <mat-card class=\"user-card\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>User Details</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"EmpId\" [disabled]='true' [(ngModel)]=\"user.empId\" type=\"text\" type=\"number\"  />\n        </mat-form-field>\n      </div>\n      <div class=\"row\">\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Name\" [disabled]='true' [(ngModel)]=\"user.name\" type=\"text\" />\n        </mat-form-field>\n      </div>\n      <div class=\"row\" *ngIf=\"showBool\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Department</mat-label>\n          <mat-select [(ngModel)]=\"user.selectedDepartment._id\" [disabled]='disableTextbox' name=\"department\">\n            <mat-option *ngFor=\"let department of departments\" [value]=\"department._id\">\n              {{ department.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"row\" *ngIf=\"showBool\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Grade</mat-label>\n          <mat-select [(ngModel)]=\"user.selectedGrade._id\" [disabled]='disableTextbox' name=\"grade\">\n            <mat-option *ngFor=\"let grade of grades\" [value]=\"grade._id\">\n              {{ grade.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"row\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Project</mat-label>\n          <mat-select [(ngModel)]=\"user.selectedProject._id\" [disabled]='disableTextbox' name=\"project\">\n            <mat-option *ngFor=\"let project of projects\" [value]=\"project._id\">\n              {{ project.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"row\" *ngIf=\"showBool\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Authorization</mat-label>\n          <mat-select [(ngModel)]=\"user.selectedAuthorization\" [disabled]='true' name=\"authorization\">\n            <mat-option *ngFor=\"let authorization of authorizations\" [value]=\"authorization.value\">\n              {{ authorization.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"row\" *ngIf=\"showBool\">\n        <mat-form-field class=\"full-width\">\n          <mat-label>Creation</mat-label>\n          <mat-select [(ngModel)]=\"user.selectedCreation\" [disabled]='true' name=\"creation\">\n            <mat-option *ngFor=\"let creation of creations\" [value]=\"creation.value\">\n              {{ creation.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n    <mat-card-actions class=\"button\">\n      <button mat-raised-button type=\"button\" *ngIf=\"!disableTextbox\" (click)=\"cancel();\">Cancel</button>\n      <button mat-raised-button type=\"button\" color=\"primary\" *ngIf=\"disableTextbox\" (click)=\"toggleEdit()\">Edit</button>\n      <button mat-raised-button type=\"button\" color=\"accent\" *ngIf=\"!disableTextbox\" (click)=\"updateUser()\">Save</button>\n  </mat-card-actions>\n  </mat-card>\n</div>\n<br>\n\n<h3 class=\"table-heading-h4\" *ngIf=\"user.authorizedTo.length != 0 && showBool\">Authorizer For: </h3>\n<div class=\"example-container mat-elevation-z8 mat-table auth-table\" *ngIf=\"user.authorizedTo.length != 0 && showBool\">\n  <mat-table [dataSource]=\"dsUserAuthTo\">\n\n    <ng-container matColumnDef=\"empId\">\n      <mat-header-cell *matHeaderCellDef> Employee Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.empId}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.name}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"department\">\n      <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedDepartment.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"grade\">\n      <mat-header-cell *matHeaderCellDef> Grade </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedGrade.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"project\">\n      <mat-header-cell *matHeaderCellDef> Project </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedProject.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"authorization\">\n      <mat-header-cell *matHeaderCellDef> Authorization </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedAuthorization}}\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"creation\">\n      <mat-header-cell *matHeaderCellDef> Creation </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedCreation}}\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"dcUserAuthTo\"></mat-header-row>\n    <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcUserAuthTo;\"></mat-row>\n  </mat-table>\n</div>\n<br>\n<h3 class=\"table-heading-h4\" *ngIf=\"user.Department.length > 1 || user.Grade.length > 1 || user.Project.length > 1\">History: </h3>\n<div class=\"table-row\">\n<div class=\"example-container mat-elevation-z8 mat-table history\" *ngIf=\"user.Department.length > 1 && showBool\">\n  <mat-table [dataSource]=\"dsUserHistory\">\n\n    <ng-container matColumnDef=\"department\">\n      <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedDepartment.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"from\">\n      <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.from | date}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"to\">\n      <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.to | date}}\n      </mat-cell>\n    </ng-container>\n\n\n    <mat-header-row *matHeaderRowDef=\"dcUserHistory\"></mat-header-row>\n    <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcUserHistory;\"></mat-row>\n  </mat-table>\n</div>\n\n<div class=\"example-container mat-elevation-z8 mat-table history\" *ngIf=\"user.Grade.length > 1 && showBool\">\n  <mat-table [dataSource]=\"dsUserHistoryGrade\">\n\n    <ng-container matColumnDef=\"grade\">\n      <mat-header-cell *matHeaderCellDef> Grade </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedGrade.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"from\">\n      <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.from | date}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"to\">\n      <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.to | date}}\n      </mat-cell>\n    </ng-container>\n\n\n    <mat-header-row *matHeaderRowDef=\"dcUserHistoryGrade\"></mat-header-row>\n    <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcUserHistoryGrade;\"></mat-row>\n  </mat-table>\n</div>\n\n<div class=\"example-container mat-elevation-z8 mat-table history\" *ngIf=\"user.Project.length > 1\">\n  <mat-table [dataSource]=\"dsUserHistoryProject\">\n\n    <ng-container matColumnDef=\"project\">\n      <mat-header-cell *matHeaderCellDef> Project </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.selectedProject.viewValue}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"from\">\n      <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.from | date}}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"to\">\n      <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{element.to | date}}\n      </mat-cell>\n    </ng-container>\n\n\n    <mat-header-row *matHeaderRowDef=\"dcUserHistoryProject\"></mat-header-row>\n    <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcUserHistoryProject;\"></mat-row>\n  </mat-table>\n</div>\n</div>\n","<h2 mat-dialog-title>Update Data?</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>Are you sure you want to update Your Data?</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Update</button>\r\n</mat-dialog-actions>\r\n","<span class=\"user-edited\">\r\n  <mat-icon aria-hidden=\"false\" aria-label=\"Party Icon\">done_outline</mat-icon>\r\n  User Details Edited Successfully!\r\n</span>\r\n\r\n","import { Attribute, Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appQuantityRetValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: QuantityRetValidatorDirective, multi: true}]\n})\nexport class QuantityRetValidatorDirective implements Validator {\n  @Input('appQuantityRetValidator') str: string;\n\n\n  // valueInLimit(quantityNum: number, quantityRet: number) {\n  //   let tolerance = 50;\n  //   let quantityRetTop = quantityNum + quantityNum*(tolerance/100);\n  //   let quantityRetBottom = quantityNum - quantityNum*(tolerance/100);\n  //   if((quantityRet>quantityRetBottom) && (quantityRet<quantityRetTop)) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const words = this.str.split(' ');\n    let quantityStr = words[0]\n    let toleranceStr = words[1]\n\n    let quantityNum = Number(quantityStr)\n    let toleranceNum = Number(toleranceStr)\n\n    // console.log('Tolerance', toleranceNum)\n    // console.log('Quantity', quantityNum)\n\n    let quantityRet = control.value;\n\n    // console.log(quantityNum)\n    // let tolerance = 50;\n    // console.log(quantityRet, tolerance, quantityNum)\n    let quantityRetTop = quantityNum + quantityNum*(toleranceNum/100);\n    let quantityRetBottom = quantityNum - quantityNum*(toleranceNum/100);\n    // console.log('QuantityRetTop',quantityRetTop, 'QuantityRetBottom',quantityRetBottom)\n    // return this.quantity ? quantityValidator(this.valueInLimit(quantityNum, quantityRet))  : null\n    return ((quantityRet>=quantityRetBottom) && (quantityRet<=quantityRetTop)) ? null : {invalidQuantity: {value: control.value}}\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user/user.service';\nimport { User } from '../models/user';\nimport { Project } from '../models/project';\nimport { Grade } from '../models/grade';\nimport { Department } from '../models/department';\nimport { ProjectArray } from '../models/projectArray';\n\ninterface Authorization {\n  value: boolean;\n  viewValue: string;\n}\ninterface Creation {\n  value: boolean;\n  viewValue: string;\n}\ninterface UserType {\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.registerForm = this.fb.group({\n      name: new FormControl('', Validators.required),\n      empId: new FormControl('', Validators.compose([Validators.required, Validators.maxLength(6), Validators.minLength(6)])),\n      password: new FormControl('', Validators.required),\n      selectedProject: new FormControl('', Validators.required),\n      selectedGrade: new FormControl('', Validators.required),\n      selectedDepartment: new FormControl('', Validators.required),\n      selectedUserType: new FormControl('', Validators.required),\n      selectedAuthorization: new FormControl('', Validators.required),\n      selectedCreation: new FormControl('', Validators.required),\n       });\n   }\n\n  ngOnInit(): void {\n    this.getUsers();\n    this.getProjects();\n    this.getGrades();\n    this.getDepartments();\n    }\n\n  selectedProject: string;\n  selectedGrade: string;\n  selectedDepartment: string;\n  selectedUserType: string;\n  selectedAuthorization: boolean;\n  selectedCreation: boolean;\n\n  users: User[];\n  projects: Project[];\n  grades: Grade[];\n  departments: Department[];\n  userTypes: UserType[] = [\n    {viewValue: 'Super Admin'},\n    {viewValue: 'Admin'},\n    {viewValue: 'User'},\n    {viewValue: 'Security'}\n  ];\n  authorizations: Authorization[] = [\n    {value: true, viewValue: 'Yes'},\n    {value: false, viewValue: 'No'},\n  ];\n  creations: Creation[] = [\n    {value: true, viewValue: 'Yes'},\n    {value: false, viewValue: 'No'},\n  ];\n\n  securityType = false;\n  userTypeFunc(userType) {\n    if(userType === this.userTypes[3].viewValue && this.registerForm.contains('selectedGrade')) {\n      this.securityType = true;\n      this.registerForm.removeControl('selectedGrade')\n      this.registerForm.setControl('empId', this.fb.control('', [Validators.required, Validators.maxLength(7), Validators.minLength(7)]));\n      this.registerForm.removeControl('selectedDepartment')\n      this.registerForm.removeControl('selectedAuthorization')\n      this.registerForm.removeControl('selectedCreation')\n    }\n    else {\n      this.securityType = false;\n      this.registerForm.addControl('selectedGrade', this.fb.control('', [Validators.required]));\n      this.registerForm.setControl('empId', this.fb.control('', [Validators.required, Validators.maxLength(6), Validators.minLength(6)]));\n      this.registerForm.addControl('selectedDepartment', this.fb.control('', [Validators.required]));\n      this.registerForm.addControl('selectedAuthorization', this.fb.control('', [Validators.required]));\n      this.registerForm.addControl('selectedCreation', this.fb.control('', [Validators.required]));\n    }\n    console.log(this.securityType)\n  }\n\n  getProjects() {\n    this.userService.getProjects()\n        .subscribe(projects => this.projects = projects);\n  }\n\n  getGrades() {\n    this.userService.getGrades()\n        .subscribe(grades => this.grades = grades);\n  }\n\n  getDepartments() {\n    this.userService.getDepartments()\n        .subscribe(departments => this.departments = departments);\n  }\n\n  getUsers() {\n    this.userService.getUsers()\n        .subscribe(users => this.users = users);\n  }\n\n  // createNewProject(regData): ProjectArray {\n  //   return {\n  //     selectedProject: regData.selectedProject , from: null, to: null\n  //   }\n  // }\n\n  onSubmit( registerData ) {\n    if(!registerData) { return; }\n    // this.createNewProject(registerData)\n    // else if(registerData.selectedUserType === this.userTypes[3].viewValue) {\n    //   this.userService.addSecurity( registerData as Security )\n    //   .subscribe(security => {\n    //     this.securities.push(security);\n    //   });\n    // }\n    else {\n    this.userService.addUser( registerData as User )\n      .subscribe(user => {\n        this.users.push(user);\n      });\n    }\n      this.registerForm.reset();\n      console.warn('Your details have been submitted', registerData);\n  }\n\n\n}\n\n// = [\n//   {value: 'simhadri', viewValue: 'Simhadri'},\n//   {value: 'kawas', viewValue: 'Kawas'},\n//   {value: 'delhi', viewValue: 'Delhi'},\n// ];\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit(registerForm.value)\">\n  <mat-card class=\"register-card\">\n    <mat-card-header class=\"header\">\n      <mat-card-title>Register</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <mat-form-field class=\"full-width\">\n          <mat-label>User Type</mat-label>\n          <mat-select formControlName=\"selectedUserType\" name=\"userType\" #userTypeSelect (valueChange)='userTypeFunc(userTypeSelect.value)'>\n            <mat-option *ngFor=\"let userType of userTypes\" [value]=\"userType.viewValue\">\n              {{ userType.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Name\" formControlName=\"name\" type=\"text\" />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"EmpId\" formControlName=\"empId\" type=\"empId\" type=\"number\" />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <mat-label>Project</mat-label>\n          <mat-select formControlName=\"selectedProject\" name=\"project\">\n            <mat-option *ngFor=\"let project of projects\" [value]=\"project._id\">\n              {{ project.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!securityType\">\n          <mat-label>Grade</mat-label>\n          <mat-select formControlName=\"selectedGrade\" name=\"grade\">\n            <mat-option *ngFor=\"let grade of grades\" [value]=\"grade._id\">\n              {{ grade.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!securityType\">\n          <mat-label>Department</mat-label>\n          <mat-select formControlName=\"selectedDepartment\" name=\"department\">\n            <mat-option *ngFor=\"let department of departments\" [value]=\"department._id\">\n              {{ department.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!securityType\">\n          <mat-label>Authorization</mat-label>\n          <mat-select formControlName=\"selectedAuthorization\" name=\"authorization\">\n            <mat-option *ngFor=\"let authorization of authorizations\" [value]=\"authorization.value\">\n              {{ authorization.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!securityType\">\n          <mat-label>Creation</mat-label>\n          <mat-select formControlName=\"selectedCreation\" name=\"creation\">\n            <mat-option *ngFor=\"let creation of creations\" [value]=\"creation.value\">\n              {{ creation.viewValue }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n    </mat-card-content>\n    <mat-card-actions class=\"button\">\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n<nav><a class=\"login\" routerLink=\"/login\">Login</a></nav>\n<br />\n<!-- <li *ngFor=\"let user of users\">\n  {{user.empId}} {{user.name}} {{user.password}} {{ user.selectedProject.viewValue }} {{ user.selectedGrade.viewValue }} {{ user.selectedDepartment.viewValue }}\n</li> -->\n<!-- <li *ngFor=\"let project of projects\">\n  {{project.viewValue}} {{project._id}}\n</li>\n<li *ngFor=\"let grade of grades\">\n  {{grade.viewValue}} {{grade._id}}\n</li>\n<li *ngFor=\"let department of departments\">\n  {{department.viewValue}} {{department._id}}\n</li> -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../services/user/user.service';\nimport { GpArray } from '../models/gpArray';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { rowsAnimation } from '../animations/template.animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { User } from '../models/user';\nimport { SearchTable } from '../models/searchTable';\nimport { Router } from '@angular/router';\nimport { CdkColumnDef, CdkTableModule } from '@angular/cdk/table';\nimport { Unit } from '../models/unit';\n\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css'],\n  animations: [rowsAnimation],\n  // providers: [CdkColumnDef, CdkTableModule]\n})\nexport class ReportComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'sno', 'description', 'quantity', 'unit', 'dateOfCreation', 'dueDateOfReturn', 'department', 'createdBy', 'owner', 'movement', 'status'];\n  dataSource: MatTableDataSource<SearchTable>;\n\n  searchTableData: SearchTable[] = [];\n\n  constructor(private userService: UserService, public dialog: MatDialog, private router: Router) {\n\n  }\n\n  Units: Unit[];\n\n  ngOnInit(): void {\n    this.getGpArray();\n    // this.getUnits();\n  }\n\n  filterData(gpArrays) {\n    for (const gp of gpArrays) {\n      for (const tableRow of gp.gatePass) {\n        if (tableRow.sno == 1) {\n          this.searchTableData.push({\n            id: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n        else {\n          this.searchTableData.push({\n            vId: gp.gatePassNo,\n            sno: tableRow.sno,\n            quantity: tableRow.quantity,\n            unit: tableRow.unit,\n            dateOfCreation: gp.createdAt,\n            dueDateOfReturn: tableRow.dateOfReturn,\n            department: gp.createForm.selectedDepartment.viewValue,\n            createdBy: gp.createdBy.name,\n            owner: gp.createForm.selectedOwner,\n            movement: gp.createForm.selectedMovement,\n            status: gp.status,\n            description: tableRow.description\n          })\n        }\n      }\n    }\n  }\n  rId;\n  getRecord(row) {\n    row.id == null ? this.rId = row.vId : this.rId = row.id;\n    const gp = this.gpArrays.find(gp => gp.gatePassNo == this.rId);\n    this.onSelect(gp);\n    // for(const gp of this.gpArrays) {\n    //   if(gp.gatePassNo === this.rId) {\n    //     this.onSelect(gp);\n    //     console.log(gp);\n    //     break;\n    //   }\n    // }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loggedIn: User = this.userService.loggedIn\n\n  gpArrays: GpArray[];\n  getGpArray() {\n    console.log(this.userService.gpArrays)\n    if (this.userService.gpArrays == undefined) {\n      this.refreshFilter();\n    }\n    else {\n      this.gpArrays = this.userService.gpArrays;\n      this.filterData(this.gpArrays)\n      this.dataSource = new MatTableDataSource(this.searchTableData);\n    }\n  }\n\n  refreshFilter() {\n    this.userService.getFilterGpArray(this.userService.getFilter())\n      .subscribe((gpArrays) => {\n        console.log(gpArrays)\n        this.userService.gpArrays = gpArrays;\n        this.gpArrays = this.userService.gpArrays;\n        this.filterData(this.gpArrays)\n        this.dataSource = new MatTableDataSource(this.searchTableData);\n      })\n  }\n\n  selectedGpArray: GpArray;\n  user: User;\n  dcDate;\n  onSelect(gpArray: GpArray): void {\n    this.userService.selectedGpArray = gpArray;\n    this.userService.storeGpArray(gpArray.gatePassNo);\n    this.router.navigate(['return']);\n  }\n\n  getUnits() {\n    this.userService.getUnits()\n      .subscribe(units => this.Units = units);\n  }\n\n}\n","<h1>List of GatePasses</h1>\n\n<mat-form-field class=\"filter\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"search term\" #input>\n</mat-form-field>\n\n<mat-table matTableExporter [dataSource]=\"dataSource\" #exporter=\"matTableExporter\" class=\"mat-elevation-z8 example-container searchTable\">\n\n  <ng-container matColumnDef=\"id\">\n    <mat-header-cell *matHeaderCellDef> Gate Pass No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"sno\">\n    <mat-header-cell *matHeaderCellDef> S.No. </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.sno}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"department\">\n    <mat-header-cell *matHeaderCellDef> Department </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.department}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"quantity\">\n    <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.quantity}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"unit\">\n    <mat-header-cell *matHeaderCellDef> Unit </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.unit.viewValue}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dateOfCreation\">\n    <mat-header-cell *matHeaderCellDef> Date Of Creation </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dateOfCreation | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dueDateOfReturn\">\n    <mat-header-cell *matHeaderCellDef> Due Date Of Return </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.dueDateOfReturn | date}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"createdBy\">\n    <mat-header-cell *matHeaderCellDef> Created By </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.createdBy}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"owner\">\n    <mat-header-cell *matHeaderCellDef> Material Owner </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.owner}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"movement\">\n    <mat-header-cell *matHeaderCellDef> Movement </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.movement}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef> Material Description </mat-header-cell>\n    <mat-cell class=\"search-table-mat-cell\" *matCellDef=\"let element\"> {{element.description}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n  <mat-row [@rowsAnimation]=\"\" (click)=\"getRecord(row)\"\n    [class.selected]=\"selectedGpArray && selectedGpArray.gatePassNo === row.id\"\n    *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n  <!-- <mat-row class=\"mat-row\" *matNoDataRow>\n    <mat-cell class=\"mat-cell\" colspan=\"12\">No data matching the filter \"{{input.value}}\"</mat-cell>\n  </mat-row> -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</mat-table>\n<div class=\"row-button\">\n<button mat-raised-button (click)=\"exporter.exportTable('xlsx', {fileName:'reports', sheet: 'gate-pass-listing', Props: {Author: 'GatePassApplication'}})\">Export to Excel</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { GpArray } from '../models/gpArray';\nimport { Department } from '../models/department';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MaterialGatePass } from '../models/gatePass';\nimport { UserService } from '../services/user/user.service';\nimport { PrintService } from '../services/print/print.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { User } from '../models/user';\nimport { rowsAnimation } from '../animations/template.animations';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Gate } from '../models/gate';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Unit } from '../models/unit';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { formatDate } from '@angular/common';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Project } from '../models/project';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\ninterface Type {\n  viewValue: string;\n}\ninterface Owner {\n  viewValue: string;\n}\ninterface Movement {\n  viewValue: string;\n}\n// interface Gate {\n//   viewValue: string;\n// }\n\n@Component({\n  selector: 'app-return',\n  templateUrl: './return.component.html',\n  styleUrls: ['./return.component.css'],\n  animations: [rowsAnimation]\n})\nexport class ReturnComponent implements OnInit {\n\n  dcGatePass = ['sno', 'modeOfTransport', 'description', 'quantity', 'unit', 'issuedTo', 'from', 'to', 'reason', 'remark', 'dateOfReturn'];\n  dcGatePassStd = ['sno', 'modeOfTransport', 'description', 'quantity', 'unit', 'issuedTo', 'from', 'to', 'reason', 'remark', 'dateOfReturn'];\n  dcGatePassRet = ['select', 'sno', 'modeOfTransport', 'description', 'quantity', 'quantityRet', 'unit', 'issuedTo', 'from', 'to', 'reason', 'remark', 'incomingRef', 'dateOfReturn',];\n  dcGatePassRetNoCheck = ['sno', 'modeOfTransport', 'description', 'quantity', 'quantityRet', 'unit', 'issuedTo', 'from', 'to', 'reason', 'remark', 'incomingRef', 'dateOfReturn',];\n  dsGatePass: MatTableDataSource<MaterialGatePass>;\n\n  disableTextbox = true;\n  loggedIn: User = this.userService.loggedIn\n  selectedGpArray: GpArray;\n  user: User;\n  returnState = false;\n  dcDate;\n\n  types: Type[] = [\n    { viewValue: 'Returnable' },\n    { viewValue: 'Non-Returnable' },\n  ];\n  owners: Owner[] = [\n    { viewValue: 'NTPC' },\n    { viewValue: 'Vendor' },\n  ];\n  movements: Movement[] = [\n    { viewValue: 'In' },\n    { viewValue: 'Out' },\n    { viewValue: 'Within' },\n  ];\n  gates: Gate[];\n  Units: Unit[];\n  departments: Department[];\n  projects: Project[];\n\n  constructor(private userService: UserService, public dialog: MatDialog, private router: Router, private _snackBar: MatSnackBar, private printService : PrintService) { }\n\n  ngOnInit(): void {\n    this.getDepartments();\n    this.getProjects();\n    if(this.userService.selectedGpArray === undefined) {\n      this.setSelectedGpArray();\n    }\n    else {\n    this.onSelect(this.userService.selectedGpArray);\n    this.gates = this.selectedGpArray.createForm.selectedProject.gates;\n    this.getUnits();\n    }\n  }\n\n  setSelectedGpArray() {\n    this.userService.searchGatePasses(this.userService.getGpNoFromLocal(), '0', this.userService.loggedIn.selectedProject._id)\n      .subscribe((gpArrays) => {\n        this.userService.selectedGpArray = gpArrays[0];\n        this.onSelect( this.userService.selectedGpArray )\n        this.gates = this.selectedGpArray.createForm.selectedProject.gates;\n        this.getUnits();\n      })\n  }\n\n  // selectedGateViewValue;\n  // calcSelectedGate() {\n  //   for(const gate of this.gates) {\n  //     if(this.selectedGpArray.createForm.selectedGate === gate._id) {\n  //       this.selectedGateViewValue = gate.viewValue;\n  //       break;\n  //     }\n  //   }\n  // }\n\n  dateFunc(value) {\n    console.log(value)\n    // this.createForm.controls.selectedType.value\n    for (const dc of this.dcGatePass) {\n      if (dc == \"dateOfReturn\") {\n        this.dcDate = true;\n        break;\n      }\n      else {\n        this.dcDate = false;\n      }\n    }\n    if (value === \"Non-Returnable\" && this.dcDate === true) {\n      this.dcGatePass.pop();\n      this.selectedGpArray.gatePass.forEach(gatePass => {\n        gatePass.dateOfReturn = null;\n      })\n    }\n    else if (value === \"Returnable\" && this.dcDate === false) {\n      this.dcGatePass.push('dateOfReturn');\n    }\n\n  }\n\n  exitBool = false;\n  checkExit() {\n    if (this.loggedIn.selectedUserType === 'Security' && this.selectedGpArray.status === 'Authorized') {\n      this.exitBool = true;\n    }\n    else {\n      this.exitBool = false;\n    }\n  }\n\n  deleteBool = false;\n  checkDelete() {\n    if (this.userService.loggedIn.empId === this.selectedGpArray.createdBy.empId && this.selectedGpArray.status === 'Created') {\n      this.deleteBool = true;\n    }\n    else {\n      this.deleteBool = false;\n    }\n  }\n\n  deleteGatePass() {\n\n    const dialogRef = this.dialog.open(DialogContentReturn, {\n      data: { header: 'Delete Gate Pass', message: 'Are you sure you want to delete Gate Pass?' }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n      if (result == true) {\n        this.userService.deleteGpArray(this.selectedGpArray)\n        .subscribe((gpArray) => {\n          this._snackBar.open(`Gate Pass ${gpArray.gatePassNo} Deleted Successfully`, 'Ok', {\n            duration: 2000,\n          });\n          this.router.navigate(['home'])\n        })\n      }\n\n    });\n\n  }\n\n  getUnits() {\n    this.userService.getUnits()\n      .subscribe(units => this.Units = units);\n  }\n\n  getProjects() {\n    this.userService.getProjects()\n      .subscribe(projects => this.projects = projects)\n  }\n\n  getDepartments() {\n    this.userService.getDepartments()\n      .subscribe(departments => this.departments = departments);\n  }\n\n  selection = new SelectionModel<MaterialGatePass>(true, []);\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dsGatePass.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dsGatePass.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: MaterialGatePass): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.sno + 1}`;\n  }\n\n  createNewGatePass(sno: number): MaterialGatePass {\n    return {\n      sno: sno,\n      modeOfTransport: null, description: null, quantity: null, unit: {_id: null, tolerance: null, viewValue: null},\n      issuedTo: null, dateOfReturn: null, from: null,\n      to: null, reason: null, remark: null, incomingRef: null\n    };\n  }\n\n  // appQuantityRetValidator(quantity: number, tolerance: number): ValidatorFn {\n  //   return (control: AbstractControl): { [key: string]: boolean} | null\n  //   return null;\n  // }\n\n  addRow() {\n    this.dsGatePass.data.push(this.createNewGatePass(this.dsGatePass.data.length + 1));\n    this.dsGatePass.filter = \"\";\n  }\n\n  deleteRow() {\n    this.dsGatePass.data.pop();\n    this.dsGatePass.filter = \"\";\n  }\n\n  toggleEdit() {\n    this.disableTextbox = false;\n  }\n\n\n  toggleReturn() {\n    this.dcGatePass = this.dcGatePassRet;\n    this.returnState = true;\n  }\n\n  exitGp() {\n    if (this.selectedGpArray.status === 'Authorized') {\n      this.selectedGpArray.status = 'Exited'\n      this.updateData('Are you sure you want to exit Gate Pass?')\n    }\n    else {\n      this._snackBar.openFromComponent(ReturnSnackComponent, {\n        duration: 3 * 1000,\n      });\n    }\n  }\n\n  cancel() {\n    this.userService.searchGatePasses(this.selectedGpArray.gatePassNo.toString(), '0', this.userService.loggedIn.selectedProject._id)\n      .subscribe((gpArray) => {\n        this.onSelect(gpArray[0])\n      })\n    this.returnState = false;\n    // this.disableTextbox = true;\n    // this.dcGatePass = this.dcGatePassStd;\n  }\n\n\n  onSelect(gpArray: GpArray): void {\n    console.log(gpArray)\n    this.disableTextbox = true;\n    gpArray.createdBy = this.createdByDetails(gpArray.createdBy, gpArray.createdAt)\n    if (gpArray.authorized != null) {\n      gpArray.authorized = this.authorizedDetails(gpArray.authorized, gpArray.authorizedDate)\n    }\n    this.selectedGpArray = gpArray;\n    this.user = this.selectedGpArray.authorized;\n    // if (this.dcGatePass != this.dcGatePassStd) {\n    //   this.dcGatePass = this.dcGatePassStd;\n    // }\n\n    this.gpStatusCheck();\n    this.gatePassTypeCheck();\n    this.dsGatePass = new MatTableDataSource(this.selectedGpArray.gatePass);\n    this.checkAuth();\n    this.checkEdit();\n    this.checkExit();\n    this.checkReturn();\n    this.checkDelete();\n  }\n\n  gpStatusCheck() {\n    if ((this.selectedGpArray.status === 'Returned' || this.selectedGpArray.status === 'Partially Returned') && this.returnState == false && this.selectedGpArray.createForm.selectedType === 'Returnable') {\n      this.dcGatePass = this.dcGatePassRetNoCheck;\n    }\n    else if (this.selectedGpArray.createForm.selectedType === 'Returnable' && this.returnState == true) {\n      this.dcGatePass = this.dcGatePassRet;\n    }\n    else {\n      this.dcGatePass = this.dcGatePassStd;\n    }\n  }\n\n  gatePassTypeCheck() {\n    for (const dc of this.dcGatePass) {\n      if (dc == \"dateOfReturn\") {\n        this.dcDate = true;\n        break;\n      }\n      else {\n        this.dcDate = false;\n      }\n    }\n    if (this.selectedGpArray.createForm.selectedType === \"Non-Returnable\" && this.dcDate === true) {\n      this.dcGatePass.pop();\n    }\n    else if (this.selectedGpArray.createForm.selectedType === \"Returnable\" && this.dcDate === false) {\n      this.dcGatePass.push('dateOfReturn');\n    }\n  }\n\n  authorizedDetails(authorized: User, authorizedDate: Date) {\n    const iterator4 = authorized.Project[Symbol.iterator]();\n    if (authorized.Project.length > 1) {\n      for (const Pro of iterator4) {\n        if ((authorizedDate >= Pro.from && authorizedDate < Pro.to) || Pro.to === null) {\n          authorized.selectedProject = Pro.selectedProject;\n          break;\n        }\n      }\n    }\n    const iterator5 = authorized.Grade[Symbol.iterator]();\n    if (authorized.Grade.length > 1) {\n      for (const Gra of iterator5) {\n        if ((authorizedDate >= Gra.from && authorizedDate < Gra.to) || Gra.to === null) {\n          authorized.selectedGrade = Gra.selectedGrade;\n          break;\n        }\n      }\n    }\n    const iterator6 = authorized.Department[Symbol.iterator]();\n    if (authorized.Department.length > 1) {\n      for (const Dep of iterator6) {\n        if ((authorizedDate >= Dep.from && authorizedDate < Dep.to) || Dep.to === null) {\n          authorized.selectedDepartment = Dep.selectedDepartment;\n          break;\n        }\n      }\n    }\n    return authorized;\n  }\n\n  createdByDetails(createdBy: User, createdAt: Date) {\n    const iterator = createdBy.Project[Symbol.iterator]();\n    if (createdBy.Project.length > 1) {\n      for (const Pro of iterator) {\n        if ((createdAt >= Pro.from && createdAt < Pro.to) || Pro.to === null) {\n          createdBy.selectedProject = Pro.selectedProject;\n          break;\n        }\n      }\n    }\n\n    const iterator2 = createdBy.Grade[Symbol.iterator]();\n    if (createdBy.Grade.length > 1) {\n      for (const Gra of iterator2) {\n        if ((createdAt >= Gra.from && createdAt < Gra.to) || Gra.to === null) {\n          createdBy.selectedGrade = Gra.selectedGrade;\n          break;\n        }\n      }\n    }\n    const iterator3 = createdBy.Department[Symbol.iterator]();\n    if (createdBy.Department.length > 1) {\n      for (const Dep of iterator3) {\n        if ((createdAt >= Dep.from && createdAt < Dep.to) || Dep.to === null) {\n          createdBy.selectedDepartment = Dep.selectedDepartment;\n          break;\n        }\n      }\n    }\n    return createdBy;\n  }\n\n  editBool;\n  checkEdit() {\n    if (this.userService.loggedIn.empId === this.selectedGpArray.createdBy.empId && this.selectedGpArray.status === 'Created') {\n      this.editBool = true;\n    }\n    else {\n      this.editBool = false;\n    }\n  }\n\n  returnBool = false;\n  checkReturn() {\n    if((this.userService.loggedIn.selectedUserType === 'Security') && (this.selectedGpArray.status === 'Exited' || this.selectedGpArray.status === 'Partially Returned')) {\n      this.returnBool = true;\n    }\n  }\n\n  authBool;\n  checkAuth() {\n    if (!this.userService.loggedIn.selectedAuthorization || this.selectedGpArray.authorized) {\n      this.authBool = false;\n      return;\n    }\n    else {\n      const iterator = this.userService.loggedIn.authorizedTo[Symbol.iterator]();\n      for (const authorizedToo of iterator) {\n        if (authorizedToo.empId === this.selectedGpArray.createdBy.empId) {\n          this.authBool = true;\n        }\n      }\n    }\n  }\n\n  selectedGpArray2: GpArray;\n  toggleAuthorize() {\n    this.selectedGpArray2 = this.selectedGpArray;\n    this.selectedGpArray2.authorized = this.loggedIn;\n    this.selectedGpArray2.status = 'Authorized';\n    // console.log(this.selectedGpArray.authorized)\n    // console.log(this.selectedGpArray)\n    this.userService.updateGpArray(this.selectedGpArray2 as GpArray)\n      .subscribe((updatedGpArray) => {\n        this.onSelect(updatedGpArray)\n        // this.user = updatedGpArray.authorized;\n        // this.selectedGpArray.authorizedDate = updatedGpArray.authorizedDate;\n        // this.authBool = false;\n        // location.reload();\n      })\n  }\n\n  // checkStatus() {\n  //   var counter = 0;\n  //   for (let i=0; i<this.selectedGpArray.gatePass.length; i++) {\n  //     if(this.selectedGpArray.gatePass[i].quantityRet > )\n  //   }\n  // }\n\n  updateData(msg?: string) {\n    const dialogRef = this.dialog.open(DialogContentReturn, {\n      data: { header: 'Update Data', message: msg }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(`Dialog result: ${result}`);\n      if (result == true) {\n        if (this.returnState === true) {\n          this.selectedGpArray.status === 'Returned'\n        }\n        this.userService.updateGpArray(this.selectedGpArray as GpArray)\n          .subscribe((gpArray) => {\n            // location.reload();\n            this.onSelect(gpArray);\n          })\n      }\n      else {\n        if(msg === 'Are you sure you want to exit Gate Pass?') {\n          this.selectedGpArray.status = 'Authorized';\n        }\n      }\n    });\n\n  }\n\n  generatePdf() {\n    this.printService.generatePdf(this.selectedGpArray, 'Return')\n  }\n\n\n}\n\n@Component({\n  selector: 'dialog-content-return',\n  templateUrl: 'dialog-content-return.html',\n})\nexport class DialogContentReturn {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n}\n\n@Component({\n  selector: 'snack-bar-component-returnSnack',\n  templateUrl: 'snack-bar-component-returnSnack.html',\n  styles: [`\n    .user-edited {\n      color: hotpink;\n    }\n  `],\n})\nexport class ReturnSnackComponent { }\n\n@Component({\n  selector: 'snack-bar-component-message',\n  templateUrl: '../snack-bar-component-message.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class MessageSnackComponent {}\n","<div *ngIf=\"selectedGpArray\">\n\n  <h2>Gate Pass Number: {{selectedGpArray.gatePassNo}} Details</h2>\n  <h3>Status: {{selectedGpArray.status}}</h3>\n  <div class=\"row-button\">\n    <button mat-mini-fab (click)=\"generatePdf()\" *ngIf=\"selectedGpArray.status=== 'Authorized'\" aria-label=\"fab icon button\">\n      <mat-icon>print</mat-icon>\n    </button>\n    <button mat-mini-fab *ngIf=\"deleteBool\" (click)=\"deleteGatePass()\">\n      <mat-icon>delete</mat-icon>\n    </button>\n  </div>\n  <form #myForm=\"ngForm\">\n    <mat-card class=\"mat-elevation-z8 create-card\">\n      <mat-grid-list cols=\"5\" rowHeight=\"5:1\">\n        <mat-grid-tile>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Name</mat-label>\n            <input matInput [disabled]='true' [(ngModel)]=\"selectedGpArray.createForm.name\" placeholder=\"Name\"\n              name=\"name\">\n          </mat-form-field>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Department</mat-label>\n            <mat-select [disabled]='true' [(ngModel)]=\"selectedGpArray.createForm.selectedDepartment._id\"\n              name=\"department\">\n              <mat-option *ngFor=\"let department of departments\" [value]=\"department._id\">\n                {{ department.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Project</mat-label>\n            <mat-select [(ngModel)]=\"selectedGpArray.createForm.selectedProject._id\" name=\"project\" [disabled]=\"true\" >\n              <mat-option *ngFor=\"let project of projects\" [value]=\"project._id\">\n                {{ project.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Type</mat-label>\n            <mat-select [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.selectedType\" #typeSelect\n              (valueChange)='dateFunc(typeSelect.value)' name=\"type\" required>\n              <mat-option *ngFor=\"let type of types\" [value]=\"type.viewValue\">\n                {{ type.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Owner</mat-label>\n            <mat-select [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.selectedOwner\" name=\"owner\"\n              required>\n              <mat-option *ngFor=\"let owner of owners\" [value]=\"owner.viewValue\">\n                {{ owner.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Movement</mat-label>\n            <mat-select [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.selectedMovement\"\n              name=\"movement\" required>\n              <mat-option *ngFor=\"let movement of movements\" [value]=\"movement.viewValue\">\n                {{ movement.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field>\n            <mat-label>Gate</mat-label>\n            <mat-select [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.selectedGate\" name=\"gate\"\n              required>\n              <mat-option *ngFor=\"let gate of gates\" [value]=\"gate._id\">\n                {{ gate.viewValue }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Receiver</mat-label>\n            <input matInput [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.receiver\"\n              placeholder=\"Receiver\" name=\"receiver\" required />\n          </mat-form-field>\n        </mat-grid-tile>\n\n        <mat-grid-tile>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Firm Represented</mat-label>\n            <input matInput [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.firm\"\n              placeholder=\"Firm Represented\" name=\"firm\" required />\n          </mat-form-field>\n        </mat-grid-tile>\n\n          <mat-grid-tile *ngIf=\"selectedGpArray.createForm.selectedOwner == owners[1].viewValue\">\n            <mat-form-field appearance=\"standard\">\n              <mat-label>Vendor Name</mat-label>\n              <input matInput [disabled]='disableTextbox' [(ngModel)]=\"selectedGpArray.createForm.vendorName\" placeholder=\"Vendor Name\" name=\"vendor\" required/>\n            </mat-form-field>\n          </mat-grid-tile>\n\n\n      </mat-grid-list>\n    </mat-card>\n    <br>\n    <div class=\"row-button\">\n      <button mat-raised-button type=\"button\" *ngIf=\"!disableTextbox\" (click)=\"addRow()\">Add row</button>\n      <button mat-raised-button type=\"button\" *ngIf=\"!disableTextbox\" (click)=\"deleteRow()\"\n        [disabled]=\"selectedGpArray.gatePass.length == 1\">Delete row</button>\n      <button mat-raised-button type=\"button\" *ngIf=\"!disableTextbox || returnState\" (click)=\"cancel()\">Cancel</button>\n      <button mat-raised-button type=\"button\" color=\"accent\" *ngIf=\"!disableTextbox || returnState\"\n        [disabled]=\"myForm.invalid\" (click)=\"updateData('Are you sure you want to update Gate Pass?')\">Update</button>\n      <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"toggleAuthorize()\"\n        *ngIf=\"authBool && disableTextbox\">Authorize</button>\n      <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"exitGp()\"\n        *ngIf=\"disableTextbox && exitBool\">Exit</button>\n      <button mat-raised-button type=\"button\" color=\"primary\"\n        *ngIf=\"selectedGpArray.createForm.selectedType === 'Returnable' && !returnState && disableTextbox && returnBool\"\n        (click)=\"toggleReturn()\">Return</button>\n      <button mat-raised-button type=\"button\" color=\"primary\" *ngIf=\"editBool && disableTextbox\"\n        (click)=\"toggleEdit()\">Edit</button>\n    </div>\n    <div class=\"example-container mat-elevation-z8\">\n      <mat-table [dataSource]=\"dsGatePass\">\n\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\">\n          <mat-header-cell *matHeaderCellDef>\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\"\n              class=\"chk-box-header\">\n            </mat-checkbox>\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\" class=\"first chk-box\">\n            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(element) : null\"\n              [checked]=\"selection.isSelected(element)\" [aria-label]=\"checkboxLabel(element)\">\n            </mat-checkbox>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"sno\">\n          <mat-header-cell *matHeaderCellDef class=\"first\"> SNo. </mat-header-cell>\n          <mat-cell *matCellDef=\"let element\" class=\"first\">\n            {{element.sno}}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"modeOfTransport\">\n          <mat-header-cell *matHeaderCellDef> Mode Of Transport </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox'\n                [(ngModel)]=\"element.modeOfTransport\" name=\"modeOfTransport-{{i}}\" required /></mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n          <mat-header-cell *matHeaderCellDef> Description </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.description\"\n                name=\"description-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantity\">\n          <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"number\" [disabled]='disableTextbox' [(ngModel)]=\"element.quantity\"\n                name=\"quantity-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"quantityRet\">\n          <mat-header-cell *matHeaderCellDef> Quantity Returned </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"number\" [disabled]='!selection.isSelected(element)'\n                [(ngModel)]=\"element.quantityRet\" name=\"quantityRet-{{i}}\" required\n                appQuantityRetValidator=\"{{element.quantity}} {{element.unit.tolerance}}\" />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit\">\n          <mat-header-cell *matHeaderCellDef> Unit </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field>\n              <mat-select [disabled]='disableTextbox' [(ngModel)]=\"element.unit._id\" name=\"unit-{{i}}\" required>\n                <mat-option *ngFor=\"let Unit of Units\" [value]=\"Unit._id\">\n                  {{ Unit.viewValue }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"issuedTo\">\n          <mat-header-cell *matHeaderCellDef> Issued To </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.issuedTo\"\n                name=\"issuedTo-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"dateOfReturn\">\n          <mat-header-cell *matHeaderCellDef> Date Of Return </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <input matInput [matDatepicker]=\"picker1\" [disabled]='disableTextbox' [(ngModel)]=\"element.dateOfReturn\"\n              name=\"dateOfReturn-{{i}}\" required readonly='true'>\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n          </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"from\">\n          <mat-header-cell *matHeaderCellDef> From </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.from\"\n                name=\"from-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"to\">\n          <mat-header-cell *matHeaderCellDef> To </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.to\"\n                name=\"to-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reason\">\n          <mat-header-cell *matHeaderCellDef> Reason </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.reason\"\n                name=\"reason-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"remark\">\n          <mat-header-cell *matHeaderCellDef> Remark </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='disableTextbox' [(ngModel)]=\"element.remark\"\n                name=\"remark-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"incomingRef\">\n          <mat-header-cell *matHeaderCellDef> Incoming Reference </mat-header-cell>\n          <mat-cell *matCellDef=\"let element; let i = index;\" class=\"last\">\n            <mat-form-field> <input matInput type=\"text\" [disabled]='!selection.isSelected(element)'\n                [(ngModel)]=\"element.incomingRef\" name=\"incomingRef-{{i}}\" required />\n            </mat-form-field>\n          </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"dcGatePass; sticky: true\"></mat-header-row>\n        <mat-row [@rowsAnimation]=\"\" *matRowDef=\"let row; columns: dcGatePass;\"></mat-row>\n      </mat-table>\n    </div>\n  </form>\n  <br>\n  <div class=\"row-button\">\n    <div *ngIf=\"selectedGpArray.authorized && selectedGpArray.authorizedDate\">\n      <mat-card class=\"user-card example-container mat-elevation-z8\">\n        <mat-card-header class=\"header\">\n          <mat-card-title>Authorized By:</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"row\">\n            Employee id: {{user.empId}}\n          </div>\n          <div class=\"row\">\n            Name: {{user.name}}\n          </div>\n          <div class=\"row\">\n            Deparment: {{user.selectedDepartment.viewValue}}\n          </div>\n          <div class=\"row\">\n            Grade: {{user.selectedGrade.viewValue}}\n          </div>\n          <div class=\"row\">\n            Project: {{user.selectedProject.viewValue}}\n          </div>\n          <div class=\"row\">\n            Date: {{selectedGpArray.authorizedDate | date}}\n          </div>\n          <div class=\"row\">\n            Time: {{selectedGpArray.authorizedDate | date:'shortTime'}}\n          </div>\n        </mat-card-content>\n        <!-- <mat-card-actions class=\"button\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n  </mat-card-actions> -->\n      </mat-card>\n    </div>\n    <mat-card class=\"user-card example-container mat-elevation-z8\">\n      <mat-card-header class=\"header\">\n        <mat-card-title>Created By:</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"row\">\n          Employee id: {{selectedGpArray.createdBy.empId}}\n        </div>\n        <div class=\"row\">\n          Name: {{selectedGpArray.createdBy.name}}\n        </div>\n        <div class=\"row\">\n          Deparment: {{selectedGpArray.createdBy.selectedDepartment.viewValue}}\n        </div>\n        <div class=\"row\">\n          Grade: {{selectedGpArray.createdBy.selectedGrade.viewValue}}\n        </div>\n        <div class=\"row\">\n          Project: {{selectedGpArray.createdBy.selectedProject.viewValue}}\n        </div>\n        <div class=\"row\">\n          Date: {{selectedGpArray.createdAt | date}}\n        </div>\n        <div class=\"row\">\n          Time: {{selectedGpArray.createdAt | date:'shortTime'}}\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","<h2 mat-dialog-title>{{data.header}}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p>{{data.message}}</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Ok</button>\r\n</mat-dialog-actions>\r\n","<span class=\"user-edited\">\r\n  <mat-icon aria-hidden=\"false\" aria-label=\"Warning Icon\">warning</mat-icon>\r\n  You cannot exit this Gate Pass!\r\n</span>\r\n\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { formatDate } from '@angular/common';\nimport { MaterialGatePass } from '../../models/gatePass';\nimport { GpArray } from '../../models/gpArray';\nimport { User } from '../../models/user';\nimport { Gate } from '../../models/gate';\nimport { Project } from '../../models/project';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n\n  constructor() { }\n\n  gates: Gate[];\n  selectedGateViewValue: String;\n\n  calcSelectedGate(selectedGateId: string, selectedProject: Project) {\n    this.gates = selectedProject.gates;\n    const gate = this.gates.find((gate) => gate._id === selectedGateId)\n    this.selectedGateViewValue = gate.viewValue;\n  }\n\n  getGatePassObject(gatePass: MaterialGatePass[], selectedType: String) {\n    if (selectedType === 'Returnable') {\n      return {\n        table: {\n          // headerRows: 1,\n          widths: ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*'],\n          body: [\n            [{\n              text: 'SNo.',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Mode Of Transport',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Description',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Quantity',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Unit',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Issued To',\n              style: 'tableHeader'\n            },\n            {\n              text: 'From',\n              style: 'tableHeader'\n            },\n            {\n              text: 'To',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Reason',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Remark',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Date Of Return',\n              style: 'tableHeader'\n            },\n            ],\n            ...gatePass.map(gp => {\n              var date = formatDate(gp.dateOfReturn, 'dd-MM-yyyy', 'en-US', '+0530');\n              return [gp.sno, gp.modeOfTransport, gp.description, gp.quantity, gp.unit.viewValue, gp.issuedTo, gp.from, gp.to, gp.reason, gp.remark, date];\n            })\n            //, gp.unit\n          ]\n        }\n      };\n    }\n    else {\n      return {\n        table: {\n          // headerRows: 1,\n          widths: ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*'],\n          body: [\n            [{\n              text: 'SNo.',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Mode Of Transport',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Description',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Quantity',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Unit',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Issued To',\n              style: 'tableHeader'\n            },\n            {\n              text: 'From',\n              style: 'tableHeader'\n            },\n            {\n              text: 'To',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Reason',\n              style: 'tableHeader'\n            },\n            {\n              text: 'Remark',\n              style: 'tableHeader'\n            },\n            ],\n            ...gatePass.map(gp => {\n              return [gp.sno, gp.modeOfTransport, gp.description, gp.quantity, gp.unit.viewValue, gp.issuedTo, gp.from, gp.to, gp.reason, gp.remark];\n            })\n            //, gp.unit\n          ]\n        }\n      };\n    }\n  }\n\n  getAuthorizedByHeaderObject(authorized: User) {\n    if (authorized) {\n      return {\n        text: 'Authorized By: ',\n        style: 'header'\n      }\n    }\n  }\n\n  getAuthorizedByObject(authorized: User, authorizedDate: Date) {\n    if (authorized) {\n      const exs = [];\n      var authorizedAtDate = formatDate(authorizedDate, 'dd-MM-yyyy', 'en-US', '+0530');\n      var authorizedAtTime = formatDate(authorizedDate, 'hh:mm:ss a', 'en-US', '+0530');\n      exs.push(\n        [{\n          columns: [\n            [{\n              text: 'Employee id: ' + authorized.empId\n            },\n            {\n              text: 'Name: ' + authorized.name\n            },\n            {\n              text: 'Department: ' + authorized.selectedDepartment.viewValue\n            },\n            {\n              text: 'Grade: ' + authorized.selectedGrade.viewValue\n            },\n            {\n              text: 'Project: ' + authorized.selectedProject.viewValue\n            },\n            {\n              text: 'Date: ' + authorizedAtDate\n            },\n            {\n              text: 'Time: ' + authorizedAtTime\n            },\n            ]\n          ]\n        }]\n      )\n\n      return {\n        table: {\n          widths: ['auto'],\n          body: [\n            ...exs\n          ]\n        },\n      }\n    }\n  }\n\n  getCreatedByObject(createdBy: User, createdAt: Date) {\n    const exs = [];\n    var createdAtDate = formatDate(createdAt, 'dd-MM-yyyy', 'en-US', '+0530');\n    var createdAtTime = formatDate(createdAt, 'hh:mm:ss a', 'en-US', '+0530');\n    exs.push(\n      [{\n        columns: [\n          [{\n            text: 'Employee id: ' + createdBy.empId\n          },\n          {\n            text: 'Name: ' + createdBy.name\n          },\n          {\n            text: 'Department: ' + createdBy.selectedDepartment.viewValue\n          },\n          {\n            text: 'Grade: ' + createdBy.selectedGrade.viewValue\n          },\n          {\n            text: 'Project: ' + createdBy.selectedProject.viewValue\n          },\n          {\n            text: 'Date: ' + createdAtDate\n          },\n          {\n            text: 'Time: ' + createdAtTime\n          },\n          ]\n        ]\n      }]\n    )\n\n    return {\n      table: {\n        widths: ['auto'],\n        body: [\n          ...exs\n        ]\n      }\n    }\n  }\n\n  getDocumentDefinition(gpArray: GpArray, selectedGateViewValue: String) {\n\n    sessionStorage.setItem('gpArray', JSON.stringify(gpArray));\n\n    return {\n      pageOrientation: 'landscape',\n      content: [\n        {\n          text: 'NTPC ' + gpArray.createForm.selectedProject.viewValue + ' Gate Pass System',\n          bold: true,\n          fontSize: 20,\n          alignment: 'center',\n          margin: [0, 0, 0, 15]\n        },\n        {\n          text: 'Gate Pass Number ' + gpArray.gatePassNo,\n          bold: true,\n          fontSize: 16,\n          alignment: 'center',\n          margin: [0, 0, 0, 10]\n        },\n        {\n          text: 'Status: ' + gpArray.status,\n          bold: true,\n          fontSize: 12,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        {\n          columns: [\n            [{\n              text: 'Name : ' + gpArray.createForm.name,\n              //  style: 'name',\n            },\n            {\n              text: 'Movement : ' + gpArray.createForm.selectedMovement,\n            }],\n            [\n              {\n                text: 'Department : ' + gpArray.createForm.selectedDepartment.viewValue,\n              },\n              {\n                text: 'Gate : ' + selectedGateViewValue,\n              }\n            ],\n            [\n              {\n                text: 'Type : ' + gpArray.createForm.selectedType,\n              },\n              {\n                text: 'Firm Represented : ' + gpArray.createForm.firm,\n              },\n            ],\n            [{\n              text: 'Project : ' + gpArray.createForm.selectedProject.viewValue,\n            },\n            {\n              text: 'Receiver : ' + gpArray.createForm.receiver,\n            },\n            ],\n            [\n              {\n                text: 'Owner : ' + gpArray.createForm.selectedOwner\n              },\n              {\n                text: 'Vendor Name : ' + gpArray.createForm.vendorName\n              }\n            ],\n          ],\n          margin: [0, 0, 0, 20],\n        },\n\n        this.getGatePassObject(gpArray.gatePass, gpArray.createForm.selectedType),\n        // {\n        //   pageOrientation: 'landscape',\n        // }\n        {\n          columns: [\n            [\n              {\n                text: 'Created By: ',\n                style: 'header'\n              },\n              this.getCreatedByObject(gpArray.createdBy, gpArray.createdAt),\n            ],\n            [\n              this.getAuthorizedByHeaderObject(gpArray.authorized),\n\n              this.getAuthorizedByObject(gpArray.authorized, gpArray.authorizedDate),\n            ]\n          ]\n        }\n\n      ],\n      info: {\n        title: 'Gate-Pass-' + gpArray.gatePassNo,\n        author: gpArray.createdBy.name,\n        subject: 'Gate Pass',\n        keywords: 'GATE PASS, MATERIAL GATE PASS',\n      },\n      styles: {\n        name: {\n          fontSize: 16,\n          bold: true\n        },\n        tableHeader: {\n          bold: true,\n        },\n        header: {\n          fontSize: 14,\n          bold: true,\n          margin: [0, 20, 0, 10]\n        },\n        // gatePass__header {\n        //   margin: [0, 0, 0, 15]\n        // }\n      },\n    };\n  }\n\n  generatePdf(gpArray: GpArray, source: string) {\n    this.calcSelectedGate(gpArray.createForm.selectedGate, gpArray.createdBy.selectedProject)\n    if (source === 'Print') {\n      gpArray.createdBy = this.createdByDetails(gpArray.createdBy, gpArray.createdAt)\n      gpArray.authorized = this.authorizedDetails(gpArray.authorized, gpArray.authorizedDate)\n    }\n    const documentDefinition = this.getDocumentDefinition(gpArray, this.selectedGateViewValue);\n    // const documentDefinition = { content: 'This is a test PDF'};\n    pdfMake.createPdf(documentDefinition).open();\n  }\n\n  authorizedDetails(authorized: User, authorizedDate: Date) {\n    const iterator4 = authorized.Project[Symbol.iterator]();\n    if (authorized.Project.length > 1) {\n      for (const Pro of iterator4) {\n        if ((authorizedDate >= Pro.from && authorizedDate < Pro.to) || Pro.to === null) {\n          authorized.selectedProject = Pro.selectedProject;\n          break;\n        }\n      }\n    }\n    const iterator5 = authorized.Grade[Symbol.iterator]();\n    if (authorized.Grade.length > 1) {\n      for (const Gra of iterator5) {\n        if ((authorizedDate >= Gra.from && authorizedDate < Gra.to) || Gra.to === null) {\n          authorized.selectedGrade = Gra.selectedGrade;\n          break;\n        }\n      }\n    }\n    const iterator6 = authorized.Department[Symbol.iterator]();\n    if (authorized.Department.length > 1) {\n      for (const Dep of iterator6) {\n        if ((authorizedDate >= Dep.from && authorizedDate < Dep.to) || Dep.to === null) {\n          authorized.selectedDepartment = Dep.selectedDepartment;\n          break;\n        }\n      }\n    }\n    return authorized;\n  }\n\n  createdByDetails(createdBy: User, createdAt: Date) {\n    const iterator = createdBy.Project[Symbol.iterator]();\n    if (createdBy.Project.length > 1) {\n      for (const Pro of iterator) {\n        if ((createdAt >= Pro.from && createdAt < Pro.to) || Pro.to === null) {\n          createdBy.selectedProject = Pro.selectedProject;\n          break;\n        }\n      }\n    }\n\n    const iterator2 = createdBy.Grade[Symbol.iterator]();\n    if (createdBy.Grade.length > 1) {\n      for (const Gra of iterator2) {\n        if ((createdAt >= Gra.from && createdAt < Gra.to) || Gra.to === null) {\n          createdBy.selectedGrade = Gra.selectedGrade;\n          break;\n        }\n      }\n    }\n    const iterator3 = createdBy.Department[Symbol.iterator]();\n    if (createdBy.Department.length > 1) {\n      for (const Dep of iterator3) {\n        if ((createdAt >= Dep.from && createdAt < Dep.to) || Dep.to === null) {\n          createdBy.selectedDepartment = Dep.selectedDepartment;\n          break;\n        }\n      }\n    }\n    return createdBy;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Project } from '../../models/project';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from '../message/message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, mapTo, tap } from 'rxjs/operators';\nimport { Department } from '../../models/department';\nimport { Grade } from '../../models/grade';\nimport { MaterialGatePass } from '../../models/gatePass';\nimport { Create } from '../../models/create';\nimport { GpArray } from '../../models/gpArray';\nimport { SearchTable } from '../../models/searchTable';\nimport { Gate } from '../../models/gate';\nimport { Unit } from '../../models/unit';\nimport { Filter } from '../../models/filter';\nimport { Tokens } from '../../models/tokens';\nimport { UserJwt } from '../../models/UserJwt';\nimport { AppComponent } from 'src/app/app.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private messageService: MessageService, public _snackBar: MatSnackBar) { }\n\n  private usersUrl = 'http://localhost:5500/api';\n  public loggedIn: User = this.checkLoggedIn();\n  public gpArrays: GpArray[];\n  public selectedGpArray: GpArray;\n  private readonly JWT_TOKEN = 'JWT_TOKEN';\n  private readonly REFRESH_TOKEN = 'REFRESH_TOKEN';\n  private readonly USER: User;\n  private readonly filter: Filter;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  checkLoggedIn() {\n    return JSON.parse(localStorage.getItem('USER'))\n\n  }\n\n  getUsers(): Observable<User[]> {\n    const url = `${this.usersUrl}/users`;\n    this.messageService.add('UserService: fetched users');\n    return this.http.get<User[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched users')),\n        catchError(this.handleError<User[]>('getUsers', []))\n      );\n  }\n\n  getAuthUsers(selectedAuthorization: boolean): Observable<User[]> {\n    const url = `${this.usersUrl}/authUsers/${selectedAuthorization}`;\n    this.messageService.add('UserService: fetched authUsers');\n    return this.http.get<User[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched authUsers')),\n        catchError(this.handleError<User[]>('getAuthUsers', []))\n      );\n  }\n\n  addAuthorization(authId: string, uId: User): Observable<any> {\n    console.log(authId, uId)\n    const url = `${this.usersUrl}/addAuthorization/${authId}`;\n    return this.http.post(url, uId, this.httpOptions).pipe(\n      tap(_ => this.log(`Added Authorization`)),\n      catchError(this.handleError<any>('addAuthorization'))\n    );\n  }\n\n\n  getProjects(): Observable<Project[]> {\n    const url = `${this.usersUrl}/projects`;\n    this.messageService.add('UserService: fetched projects');\n    return this.http.get<Project[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched projects')),\n        catchError(this.handleError<Project[]>('getProjects', []))\n      );\n  }\n\n  getDepartments(): Observable<Department[]> {\n    const url = `${this.usersUrl}/departments`;\n    this.messageService.add('UserService: fetched departments');\n    return this.http.get<Department[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched departments')),\n        catchError(this.handleError<Department[]>('getDepartments', []))\n      );\n  }\n\n  getUnits(): Observable<Unit[]> {\n    const url = `${this.usersUrl}/units`;\n    this.messageService.add('UserService: fetched units');\n    return this.http.get<Unit[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched units')),\n        catchError(this.handleError<Department[]>('getUnits', []))\n      );\n  }\n\n  getGatePasses(): Observable<MaterialGatePass[]> {\n    const url = `${this.usersUrl}/gatepass/getall`;\n    this.messageService.add('UserService: fetched gatePasses');\n    return this.http.get<MaterialGatePass[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched gatePasses')),\n        catchError(this.handleError<MaterialGatePass[]>('getGatePasses', []))\n      );\n  }\n\n  getGpArray(): Observable<GpArray[]> {\n    const url = `${this.usersUrl}/gatepass/GpArray/getall`;\n    this.messageService.add('UserService: fetched GpArray');\n    return this.http.get<GpArray[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched GpArray')),\n        catchError(this.handleError<GpArray[]>('getGpArray', []))\n      );\n  }\n\n  getFilterGpArray( filterForm: Filter ): Observable<any> {\n    console.log(filterForm)\n    const url = `${this.usersUrl}/gatepass/GpArray/filter`;\n    this.storeFilter(filterForm)\n    return this.http.post(url, filterForm, this.httpOptions).pipe(\n      tap(_ => this.log(`Received Filtered GpArray`)),\n      catchError(this.handleError<any>('getFilterGpArray'))\n    );\n  }\n\n  getInboxGpArray( authToId: string[] ): Observable<any> {\n    console.log(authToId)\n    const url = `${this.usersUrl}/gatepass/GpArray/inbox`;\n    return this.http.post(url, authToId, this.httpOptions).pipe(\n      tap(_ => this.log(`Received Inbox GpArrays`)),\n      catchError(this.handleError<any>('getInboxGpArray'))\n    );\n  }\n\n  getInboxAuthGpArray( authId: string ): Observable<any> {\n    console.log(authId)\n    const url = `${this.usersUrl}/gatepass/GpArray/inbox/${authId}`;\n    return this.http.get<GpArray[]>(url).pipe(\n      tap(_ => this.log(`Received Inbox Authorized GpArrays`)),\n      catchError(this.handleError<any>('getInboxGpArray'))\n    );\n  }\n\n  private storeFilter( filterForm: Filter ) {\n    // localStorage.setItem(this.filter, filterForm);\n    localStorage.setItem('filter', JSON.stringify(filterForm))\n  }\n\n  getFilter() {\n    // return localStorage.getItem(this.filter)\n    return JSON.parse(localStorage.getItem('filter'))\n  }\n\n  storeGpArray(gatePassNoNum: Number) {\n    const gatePassNo = String(gatePassNoNum)\n    // localStorage.setItem('gatePassNo', JSON.stringify(gatePassNo))\n    localStorage.setItem('gatePassNo', gatePassNo)\n  }\n\n  private storeUser(user: User) {\n    localStorage.setItem('USER', JSON.stringify(user))\n  }\n\n  getGpNoFromLocal() {\n    // return JSON.parse(localStorage.getItem('gatePassNo'))\n    return localStorage.getItem('gatePassNo')\n  }\n\n  updateGpArray(gpArray: GpArray): Observable<any> {\n    const url = `${this.usersUrl}/gatepass/GpArray/update`;\n    return this.http.put(url, gpArray, this.httpOptions).pipe(\n      tap(_ => this.log(`updated GpArray id=${gpArray._id}`)),\n      catchError(this.handleError<any>('updateGpArray'))\n    );\n  }\n\n  addDepartment(department: Department): Observable<Department> {\n    console.log(department)\n    const url = `${this.usersUrl}/department/add`;\n    return this.http.post(url, department, this.httpOptions).pipe(\n      tap((newDepartment: Department) => this.log(`added department w/ id=${newDepartment._id}`)),\n      catchError(this.handleError<any>('addDepartment'))\n    );\n  }\n\n  updateDepartment(department: Department): Observable<any> {\n    console.log(department)\n    const url = `${this.usersUrl}/department/update`;\n    return this.http.put(url, department, this.httpOptions).pipe(\n      tap(_ => this.log(`updated department id=${department._id}`)),\n      catchError(this.handleError<any>('updateDepartment'))\n    );\n  }\n\n  deleteDepartment(department: Department): Observable<Department> {\n    const id = department._id;\n    const url = `${this.usersUrl}/department/delete/${id}`;\n    return this.http.delete<Department>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted department id=${id}`)),\n      catchError(this.handleError<Department>('deleteDepartment'))\n    );\n  }\n\n  addGrade(grade: Grade): Observable<Grade> {\n    console.log(grade)\n    const url = `${this.usersUrl}/grade/add`;\n    return this.http.post(url, grade, this.httpOptions).pipe(\n      tap((newGrade: Grade) => this.log(`added grade w/ id=${newGrade._id}`)),\n      catchError(this.handleError<any>('addGrade'))\n    );\n  }\n\n  updateGrade(grade: Grade): Observable<any> {\n    console.log(grade)\n    const url = `${this.usersUrl}/grade/update`;\n    return this.http.put(url, grade, this.httpOptions).pipe(\n      tap(_ => this.log(`updated grade id=${grade._id}`)),\n      catchError(this.handleError<any>('updateGrade'))\n    );\n  }\n\n  deleteGrade(grade: Grade): Observable<Grade> {\n    const id = grade._id;\n    const url = `${this.usersUrl}/grade/delete/${id}`;\n    return this.http.delete<Grade>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted grade id=${id}`)),\n      catchError(this.handleError<Department>('deleteGrade'))\n    );\n  }\n\n  addUnit(unit: Unit): Observable<Unit> {\n    console.log(unit)\n    const url = `${this.usersUrl}/unit/add`;\n    return this.http.post(url, unit, this.httpOptions).pipe(\n      tap((newUnit: Unit) => this.log(`added unit w/ id=${newUnit._id}`)),\n      catchError(this.handleError<Unit>('addUnit'))\n    );\n  }\n\n  updateUnit(unit: Unit): Observable<Unit> {\n    console.log(unit)\n    const url = `${this.usersUrl}/unit/update`;\n    return this.http.put(url, unit, this.httpOptions).pipe(\n      tap(_ => this.log(`updated unit id=${unit._id}`)),\n      catchError(this.handleError<any>('updateUnit'))\n    );\n  }\n\n  addProject(project: Project): Observable<Project> {\n    console.log(project)\n    const url = `${this.usersUrl}/project/add`;\n    return this.http.post(url, project, this.httpOptions).pipe(\n      tap((newProject: Project) => this.log(`added project w/ id=${newProject._id}`)),\n      catchError(this.handleError<any>('addProject'))\n    );\n  }\n\n  addGate(gate: Gate): Observable<Gate> {\n    console.log(gate)\n    const url = `${this.usersUrl}/gate/add`;\n    return this.http.post(url, gate, this.httpOptions).pipe(\n      tap((newGate: Gate) => this.log(`added gate w/ id=${newGate._id}`)),\n      catchError(this.handleError<any>('addGate'))\n    );\n  }\n\n  updateGate(gate: Gate): Observable<any> {\n    console.log(gate)\n    const url = `${this.usersUrl}/gate/update`;\n    return this.http.put(url, gate, this.httpOptions).pipe(\n      tap(_ => this.log(`updated gate id=${gate._id}`)),\n      catchError(this.handleError<any>('updateGate'))\n    );\n  }\n\n\n  updateProject(project: Project): Observable<any> {\n    console.log(project)\n    const url = `${this.usersUrl}/project/update`;\n    return this.http.put(url, project, this.httpOptions).pipe(\n      tap(_ => this.log(`updated project id=${project._id}`)),\n      catchError(this.handleError<any>('updateProject'))\n    );\n  }\n\n  deleteProject(project: Project): Observable<Project> {\n    const id = project._id;\n    const url = `${this.usersUrl}/project/delete/${id}`;\n    return this.http.delete<Project>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted project id=${id}`)),\n      catchError(this.handleError<Department>('deleteProject'))\n    );\n  }\n\n  getGrades(): Observable<Grade[]> {\n    const url = `${this.usersUrl}/grades`;\n    this.messageService.add('UserService: fetched grades');\n    return this.http.get<Grade[]>(url)\n      .pipe(\n        tap(_ => this.log('fetched grades')),\n        catchError(this.handleError<Grade[]>('getGrades', []))\n      );\n  }\n\n  getUser(id: string): Observable<User> {\n    const url = `${this.usersUrl}/user/${id}`;\n    return this.http.get<User>(url).pipe(\n      tap((user: User) => this.log(`fetched user id = ${user._id}`)),\n      catchError(this.handleError<User>(`getUser id=${id}`))\n    );\n  }\n\n  addUser(user: User): Observable<User> {\n    console.log(user)\n    const url = `${this.usersUrl}/register`;\n    return this.http.post<User>(url, user, this.httpOptions).pipe(\n      tap((newUser: User) => this.log(`added user w/ id=${newUser._id}`)),\n      catchError(this.handleError<User>('addUser'))\n    );\n  }\n\n  updateUser(user: User): Observable<User> {\n    const url = `${this.usersUrl}/user/update`;\n    return this.http.put(url, user, this.httpOptions).pipe(\n      tap((updatedUser: User) => this.doUpdateUser(updatedUser)),\n      catchError(this.handleError<any>('updateUser'))\n    );\n  }\n\n  private doUpdateUser(updatedUser: User) {\n    this.log(`updated user id=${updatedUser._id}`)\n    // this.snackBarMessage(`Updated User ${updatedUser.name}`)\n    this.storeUser(updatedUser)\n  }\n\n  addCreateForm(createForm: Create): Observable<Create> {\n    console.log(createForm)\n    const url = `${this.usersUrl}/gatepass/createForm/add`;\n    return this.http.post<Create>(url, createForm, this.httpOptions).pipe(\n      tap((newCreateForm: Create) => this.log(`added create form`)),\n      catchError(this.handleError<Create>('addCreateForm'))\n    );\n  }\n\n  addGpArray(gpArray: GpArray): Observable<GpArray> {\n    console.log(gpArray)\n    const url = `${this.usersUrl}/gatepass/GpArray/add`;\n    return this.http.post<GpArray>(url, gpArray, this.httpOptions).pipe(\n      tap((newgpArray: GpArray) => this.log(`added GatePass Array w/ id=${newgpArray._id}`)),\n      catchError(this.handleError<GpArray>('addGpArray'))\n    );\n  }\n\n  deleteGpArray(gpArray: GpArray) {\n    const id = gpArray._id;\n    const url = `${this.usersUrl}/gatepass/GpArray/delete/${id}`;\n    return this.http.delete<GpArray>(url, this.httpOptions).pipe(\n      tap((gpArray: GpArray) => this.log(`deleted GatePass Number ${gpArray.gatePassNo}`)),\n      catchError(this.handleError<GpArray>('deleteGpArray'))\n    )\n  }\n\n  addGatePass(gatePasses: MaterialGatePass[]): Observable<MaterialGatePass[]> {\n    console.log(gatePasses)\n    const url = `${this.usersUrl}/gatepass/add`;\n    return this.http.post<MaterialGatePass[]>(url, gatePasses, this.httpOptions).pipe(\n      tap((newGatePass: MaterialGatePass[]) => this.log(`added GatePass`)),\n      catchError(this.handleError<MaterialGatePass[]>('addGatePass'))\n    );\n  }\n\n  // getGpArrayById(id: string): Observable<GpArray> {\n  //   const url = `${this.usersUrl}/gatepass/${id}`;\n  //   return this.http.get<GpArray>(url).pipe(\n  //     tap((gpArray: GpArray) => this.log(`fetched user id = ${gpArray._id}`)),\n  //     catchError(this.handleError<GpArray>(`getGpArrayById id=${id}`))\n  //   );\n  // }\n\n  loginUser(user: User): Observable<boolean> {\n    console.log(user)\n    const url = `${this.usersUrl}/login`;\n    return this.http.post<any>(url, user)\n      .pipe(\n        tap(userJwt =>\n          // console.log('data: ',tokens)\n          this.doLoginUser(userJwt)\n          // this.log(`logged in user w/ empId=${data.user.empId}`)\n        ),\n        mapTo(true),\n        catchError(this.handleError<any>('loginUser', []))\n    )\n  }\n\n  private doLoginUser(userJwt: UserJwt) {\n    console.log(userJwt.user)\n    // localStorage.setItem(this.loggedIn, userJwt.user)\n    this.loggedIn = userJwt.user\n    localStorage.setItem('USER', JSON.stringify(this.loggedIn))\n    var tokens: Tokens;\n    tokens = userJwt\n    this.storeTokens(tokens);\n    this.snackBarMessage(`Logged in successfully! Welcome ${userJwt.user.name}`)\n  }\n\n  private storeTokens(tokens: Tokens) {\n    localStorage.setItem(this.JWT_TOKEN, tokens.jwt);\n    localStorage.setItem(this.REFRESH_TOKEN, tokens.refreshToken)\n  }\n\n  logOutUser() {\n    console.log('logOutUser')\n    const url = `${this.usersUrl}/logout`;\n    return this.http.post<any>(url, {\n      'refreshToken': this.getRefreshToken()\n    }).pipe(\n      tap(() => this.doLogoutUser()),\n      mapTo(true),\n      catchError(this.handleError<any>('logOutUser'))\n    )\n  }\n\n  private doLogoutUser() {\n    this.loggedIn = null\n    this.snackBarMessage('Logged out successfully')\n    this.removeTokens();\n  }\n\n  private removeTokens() {\n    localStorage.removeItem('USER');\n    localStorage.removeItem(this.JWT_TOKEN);\n    localStorage.removeItem(this.REFRESH_TOKEN);\n    localStorage.removeItem('gatePassNo');\n    localStorage.removeItem('filter');\n  }\n\n  refreshToken() {\n    const url = `${this.usersUrl}/refresh`\n    return this.http.post<any>(url, {\n      'refreshToken': this.getRefreshToken()\n    }).pipe(tap((tokens: Tokens) => {\n      this.storeJwtToken(tokens.jwt);\n    }));\n  }\n\n  private getRefreshToken() {\n    return localStorage.getItem(this.REFRESH_TOKEN)\n  }\n\n  private storeJwtToken(jwt: string) {\n    localStorage.setItem(this.JWT_TOKEN, jwt)\n  }\n\n  getJwtToken() {\n    return localStorage.getItem(this.JWT_TOKEN);\n  }\n\n  searchUsers(term: string, selectedAuthorization: boolean, selectedProject: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<User[]>(`${this.usersUrl}/user/search/${term}/${selectedAuthorization}/${selectedProject}`).pipe(\n      tap(x => x.length ?\n         this.log(`found users matching \"${term}\"`) :\n         this.log(`no users matching \"${term}\"`)),\n      catchError(this.handleError<User[]>('searchUsers', []))\n    );\n  }\n\n  searchGatePasses(term: string, print: string, project: string): Observable<GpArray[]> {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<GpArray[]>(`${this.usersUrl}/gatepass/search/${term}/${print}/${project}`).pipe(\n      tap(x => x.length ?\n         this.log(`found gate passes matching \"${term}\"`) :\n         this.log(`no gate passes matching \"${term}\"`)),\n      catchError(this.handleError<GpArray[]>('searchGatePasses', []))\n    );\n  }\n  private log(message: string) {\n    this.messageService.add(`UserService: ${message}`);\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      this.snackBarError(error);\n      return of(result as T);\n    }\n  }\n\n\n  snackBarMessage(message: string) {\n\n    this._snackBar.open(`${message}`, 'Ok', {\n      duration: 2000,\n    });\n\n  }\n\n  snackBarError(error) {\n\n    this._snackBar.open(`${error.statusText}`, 'Ok', {\n      duration: 2000,\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse\n} from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { UserService } from './services/user/user.service';\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(public userService: UserService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if(this.userService.getJwtToken()) {\n      request = this.addToken(request, this.userService.getJwtToken());\n    }\n\n    return next.handle(request).pipe(catchError(error => {\n      if(error instanceof HttpErrorResponse && error.status === 401) {\n        return this.handle401Error(request, next);\n      } else {\n        return throwError(error);\n      }\n    }));\n  }\n\n  private addToken(request: HttpRequest<any>, token: string) {\n    return request.clone({\n      setHeaders: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\n    if(!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      return this.userService.refreshToken().pipe(\n        switchMap((token: any) => {\n          this.isRefreshing = false;\n          this.refreshTokenSubject.next(token.jwt);\n          return next.handle(this.addToken(request, token.jwt));\n        }));\n    } else {\n      return this.refreshTokenSubject.pipe(\n        filter(token => token != null),\n        take(1),\n        switchMap(jwt => {\n          return next.handle(this.addToken(request, jwt));\n        }));\n    }\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}